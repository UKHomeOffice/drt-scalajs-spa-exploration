# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET           /                                                    controllers.Application.index
GET           /health-check                                        controllers.Application.healthCheck

GET           /airport-config                                      controllers.Application.getAirportConfig
GET           /contact-details                                     controllers.Application.getContactDetails

GET           /ooh-status                                          controllers.Application.getOOHStatus
GET           /feature-flags                                       controllers.Application.getFeatureFlags

GET           /airport-info                                        controllers.Application.getAirportInfo

GET           /alerts/:createdAfter                                controllers.Application.getAlerts(createdAfter: Long)
POST          /alerts                                              controllers.Application.addAlert
DELETE        /alerts                                              controllers.Application.deleteAlerts

GET           /version                                             controllers.Application.getApplicationVersion

GET           /crunch                                              controllers.Application.getCrunch
GET           /crunch-snapshot/:pit                                controllers.Application.getCrunchSnapshot(pit: Long)

GET           /feed-statuses                                       controllers.Application.getFeedStatuses

GET           /logged-in                                           controllers.Application.isLoggedIn

GET           /fixed-points                                        controllers.Application.getFixedPoints
POST          /fixed-points                                        controllers.Application.saveFixedPoints

GET           /export/api/:terminalName/:year/:month/:day          controllers.Application.exportApi(day: Int, month: Int, year: Int, terminalName: String)
GET           /export/desks/:pointInTime/:terminalName             controllers.Application.exportDesksAndQueuesAtPointInTimeCSV(pointInTime, terminalName, startHour: Int ?= 0, endHour: Int ?= 24)
GET           /export/arrivals/:pointInTime/:terminalName          controllers.Application.exportFlightsWithSplitsAtPointInTimeCSV(pointInTime, terminalName, startHour: Int ?= 0, endHour: Int ?= 24)
GET           /export/desks/:start/:end/:terminalName              controllers.Application.exportDesksAndQueuesBetweenTimeStampsCSV(start, end, terminalName)
GET           /export/arrivals/:start/:end/:terminalName           controllers.Application.exportFlightsWithSplitsBetweenTimeStampsCSV(start, end, terminalName)
GET           /export/planning/:weekStarting/:terminalName         controllers.Application.exportForecastWeekToCSV(weekStarting, terminalName)
GET           /export/headlines/:weekStarting/:terminalName        controllers.Application.exportForecastWeekHeadlinesToCSV(weekStarting, terminalName)
GET           /export/users                                        controllers.Application.exportUsers

# Map static resources from the /public folder to the /assets URL path
GET           /assets/fonts/*file                                  controllers.Assets.at(path="/public/lib/font-awesome/fonts", file)
GET           /assets/images/*file                                 controllers.Assets.at(path="/public/images", file)
GET           /assets/*file                                        controllers.Assets.versioned(path="/public", file: Asset)

# Autowire calls
POST          /api/*path                                           controllers.Application.autowireApi(path: String)

GET           /data/user                                           controllers.Application.getLoggedInUser()

POST          /data/login                                          controllers.Application.apiLogin()

GET           /data/user/has-port-access                           controllers.Application.getUserHasPortAccess()


# Logging
POST          /logging                                             controllers.Application.logging


POST          /data/staff                                          controllers.Application.saveStaff


# Feed import
POST          /data/feed/:feedType/:portCode                       controllers.Application.feedImport(feedType: String, portCode: String)

# Test related
POST          /test/arrival                                        test.controllers.TestController.addArrival

POST          /test/arrivals/:forDate                              test.controllers.TestController.addArrivals(forDate)

POST          /test/manifest                                       test.controllers.TestController.addManifest

POST          /test/mock-roles                                     test.controllers.TestController.setMockRoles()
GET           /test/mock-roles-set                                 test.controllers.TestController.setMockRolesByQueryString()

DELETE        /test/data                                           test.controllers.TestController.deleteAllData()
