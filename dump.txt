[0m[[0minfo[0m] [0mLoading project definition from /home/rich/dev/drt-scalajs-spa-exploration/project[0m
[0m[[0minfo[0m] [0mSet current project to drt-scalajs-spa-exploration (in build file:/home/rich/dev/drt-scalajs-spa-exploration/)[0m
[0m[[0minfo[0m] [0mSet current project to drt (in build file:/home/rich/dev/drt-scalajs-spa-exploration/)[0m
[0m[[33mwarn[0m] [0mCredentials file /home/rich/.ivy2/.credentials does not exist[0m
[0m[[33mwarn[0m] [0mCredentials file /home/rich/.ivy2/.credentials does not exist[0m
[0m[[0minfo[0m] [0mCompiling 1 Scala source to /home/rich/dev/drt-scalajs-spa-exploration/server/target/scala-2.11/classes...[0m

cannot create a JUnit XML printer. Please check that specs2-junit.jar is on the classpath

org.specs2.reporter.JUnitXmlPrinter$
java.net.URLClassLoader.findClass(URLClassLoader.java:381)
java.lang.ClassLoader.loadClass(ClassLoader.java:424)
sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
java.lang.ClassLoader.loadClass(ClassLoader.java:357)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
scalaz.Name$$anon$5.value(Name.scala:18)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$ErrorEffectOps.andFinally(ErrorEffect.scala:74)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:77)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:62)
org.specs2.control.eff.Arrs.go$1(Eff.scala:234)
org.specs2.control.eff.Arrs.apply(Eff.scala:244)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
scalaz.$bslash$div.leftMap(Either.scala:98)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:47)
org.specs2.control.eff.Interpret$class.go$1(Interpret.scala:134)
org.specs2.control.eff.Interpret$class.interpretLoop(Interpret.scala:145)
org.specs2.control.eff.Interpret$.interpretLoop(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret(Interpret.scala:57)
org.specs2.control.eff.Interpret$.interpret(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret1(Interpret.scala:64)
org.specs2.control.eff.Interpret$.interpret1(Interpret.scala:153)
org.specs2.control.eff.ErrorEffect$class.runError(ErrorEffect.scala:65)
org.specs2.control.eff.ErrorEffect$.runError(ErrorEffect.scala:120)
org.specs2.control.package$.executeAction(package.scala:56)
org.specs2.runner.SbtRunner$$anonfun$newTask$1$$anon$4.execute(SbtRunner.scala:39)
sbt.ForkMain$Run$2.call(ForkMain.java:296)
sbt.ForkMain$Run$2.call(ForkMain.java:286)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
java.lang.Thread.run(Thread.java:745)
[INFO] [01/12/2017 17:33:28.506] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] airportConfig is AirportConfig(EDI,List(eeaDesk, eGate),Map(eeaDesk -> 25, eGate -> 5),List(A1),List(SplitRatio(PaxTypeAndQueue(eeaMachineReadable,eeaDesk),0.5), SplitRatio(PaxTypeAndQueue(eeaMachineReadable,eGate),0.5)),Map(A1 -> Map(PaxTypeAndQueue(eeaMachineReadable,eeaDesk) -> 0.3333333333333333, PaxTypeAndQueue(eeaMachineReadable,eGate) -> 0.4166666666666667)))
[INFO] [01/12/2017 17:33:28.539] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] New flights List()
[INFO] [01/12/2017 17:33:28.542] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] Old      fl MapLike()
[INFO] [01/12/2017 17:33:28.543] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] Updating fl List()
[INFO] [01/12/2017 17:33:28.544] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] Dropped 0 flights before 2016-01-01
[INFO] [01/12/2017 17:33:28.546] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:28.555] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:28.562] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] Received GetLatestCrunch(A1, eeaDesk)
[INFO] [01/12/2017 17:33:28.563] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] Sender is Actor[akka://streamCrunchTests/system/testActor-1#302688408]
[INFO] [01/12/2017 17:33:28.563] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] getting crunch for A1/eeaDesk
[INFO] [01/12/2017 17:33:28.567] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
2017-01-12 17:33:28,578 [ForkJoinPool-2-worker-7] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-01-01T00:00,0)))
2017-01-12 17:33:28,581 [ForkJoinPool-2-worker-5] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-01-01T00:00,0)))
2017-01-12 17:33:28,586 [ForkJoinPool-2-worker-1] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-01-01T00:00,0)))
[INFO] [01/12/2017 17:33:28.694] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk lookup wl 
[INFO] [01/12/2017 17:33:28.694] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk lookup wl 
[INFO] [01/12/2017 17:33:28.696] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] A1/eGate lookup wl 
[INFO] [01/12/2017 17:33:28.700] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1451606400000,3.333333333333333), WL(1451606460000,3.333333333333333), WL(1451606520000,3.333333333333333), WL(1451606580000,3.333333333333333), WL(1451606640000,3.333333333333333), WL(1451606700000,3.333333333333333), WL(1451606760000,3.333333333333333), WL(1451606820000,3.333333333333333), WL(1451606880000,3.333333333333333), WL(1451606940000,3.333333333333333)), eGate -> List(WL(1451606400000,4.166666666666667), WL(1451606460000,4.166666666666667), WL(1451606520000,4.166666666666667), WL(1451606580000,4.166666666666667), WL(1451606640000,4.166666666666667), WL(1451606700000,4.166666666666667), WL(1451606760000,4.166666666666667), WL(1451606820000,4.166666666666667), WL(1451606880000,4.166666666666667), WL(1451606940000,4.166666666666667))))
[INFO] [01/12/2017 17:33:28.700] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-01-01T00:00:00.000Z
[INFO] [01/12/2017 17:33:28.702] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eeaDesk filtering minutes to: 1451606400000 to 1451610000000
[INFO] [01/12/2017 17:33:28.702] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1451606400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:28.705] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1451606400000,3.333333333333333), WL(1451606460000,3.333333333333333), WL(1451606520000,3.333333333333333), WL(1451606580000,3.333333333333333), WL(1451606640000,3.333333333333333), WL(1451606700000,3.333333333333333), WL(1451606760000,3.333333333333333), WL(1451606820000,3.333333333333333), WL(1451606880000,3.333333333333333), WL(1451606940000,3.333333333333333)), eGate -> List(WL(1451606400000,4.166666666666667), WL(1451606460000,4.166666666666667), WL(1451606520000,4.166666666666667), WL(1451606580000,4.166666666666667), WL(1451606640000,4.166666666666667), WL(1451606700000,4.166666666666667), WL(1451606760000,4.166666666666667), WL(1451606820000,4.166666666666667), WL(1451606880000,4.166666666666667), WL(1451606940000,4.166666666666667))))
[INFO] [01/12/2017 17:33:28.705] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-01-01T00:00:00.000Z
[INFO] [01/12/2017 17:33:28.705] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eGate filtering minutes to: 1451606400000 to 1451610000000
[INFO] [01/12/2017 17:33:28.705] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1451606400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:28.705] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eGate
[INFO] [01/12/2017 17:33:28.703] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eeaDesk
[INFO] [01/12/2017 17:33:28.712] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate)
[INFO] [01/12/2017 17:33:28.714] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1451606400000,3.333333333333333), WL(1451606460000,3.333333333333333), WL(1451606520000,3.333333333333333), WL(1451606580000,3.333333333333333), WL(1451606640000,3.333333333333333), WL(1451606700000,3.333333333333333), WL(1451606760000,3.333333333333333), WL(1451606820000,3.333333333333333), WL(1451606880000,3.333333333333333), WL(1451606940000,3.333333333333333)), eGate -> List(WL(1451606400000,4.166666666666667), WL(1451606460000,4.166666666666667), WL(1451606520000,4.166666666666667), WL(1451606580000,4.166666666666667), WL(1451606640000,4.166666666666667), WL(1451606700000,4.166666666666667), WL(1451606760000,4.166666666666667), WL(1451606820000,4.166666666666667), WL(1451606880000,4.166666666666667), WL(1451606940000,4.166666666666667))))
[INFO] [01/12/2017 17:33:28.715] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-01-01T00:00:00.000Z
[INFO] [01/12/2017 17:33:28.715] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eeaDesk filtering minutes to: 1451606400000 to 1451610000000
[INFO] [01/12/2017 17:33:28.715] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1451606400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:28.715] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eeaDesk
[INFO] [01/12/2017 17:33:28.715] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate)
[INFO] [01/12/2017 17:33:28.717] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] A1/eGate Crunching on List(4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:28.717] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 4.166666666666667, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:28.718] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eGate, Workloads: (4.166666666666667,4.166666666666667,4.166666666666667,4.166666666666667,4.166666666666667,4.166666666666667,4.166666666666667,4.166666666666667,4.166666666666667,4.166666666666667,0.0,0.0,0.0,0.0,0.0)...
[INFO] [01/12/2017 17:33:28.727] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate)
[INFO] [01/12/2017 17:33:28.729] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk Crunching on List(3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:28.747] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:28.747] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk Crunching on List(3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:28.748] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 3.333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:28.749] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eeaDesk, Workloads: (3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,0.0,0.0,0.0,0.0,0.0)...
[INFO] [01/12/2017 17:33:28.750] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eeaDesk, Workloads: (3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,3.333333333333333,0.0,0.0,0.0,0.0,0.0)...
2017-01-12 17:33:30,916 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
2017-01-12 17:33:30,921 [ForkJoinPool-2-worker-7] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
2017-01-12 17:33:30,943 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:31,582 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - about to crunch in R
rollingfairxmax: c(4, 4, 4, 4, 4,... 60 elements total)
2017-01-12 17:33:31,699 [ForkJoinPool-2-worker-7] INFO  services.TryRenjin$ - about to crunch in R
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:31,732 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - about to crunch in R
2017-01-12 17:33:31,804 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:31.833] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(1, 1, 2, 2, 2, 3, 3, 4, 4, 4)))
[INFO] [01/12/2017 17:33:31.833] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/eeaDesk starting at 1451606400000
2017-01-12 17:33:31,857 [ForkJoinPool-2-worker-7] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:31.864] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eGate Success(CrunchResult(Vector(3, 3, 3, 3, 3, 3, 3, 3, 3, 3),Vector(1, 1, 1, 2, 2, 2, 2, 3, 3, 3)))
2017-01-12 17:33:31,992 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:31.997] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(1, 1, 2, 2, 2, 3, 3, 4, 4, 4)))
[INFO] [01/12/2017 17:33:32.015] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/eeaDesk starting at 1451606400000
[INFO] [01/12/2017 17:33:32.033] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] crunchActor received CrunchResultWithTimeAndInterval(1451606400000,60000,Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
2017-01-12 17:33:32,258 [ForkJoinPool-2-worker-1] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-01-01T01:00,0)))
2017-01-12 17:33:32,259 [ForkJoinPool-2-worker-5] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-01-01T01:00,0)))
2017-01-12 17:33:32,260 [ForkJoinPool-2-worker-3] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-01-01T01:00,0)))
[INFO] [01/12/2017 17:33:32.257] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] airportConfig is AirportConfig(EDI,List(eeaDesk, eGate),Map(eeaDesk -> 25, eGate -> 5),List(A1),List(SplitRatio(PaxTypeAndQueue(eeaMachineReadable,eeaDesk),0.5), SplitRatio(PaxTypeAndQueue(eeaMachineReadable,eGate),0.5)),Map(A1 -> Map(PaxTypeAndQueue(eeaMachineReadable,eeaDesk) -> 0.3333333333333333, PaxTypeAndQueue(eeaMachineReadable,eGate) -> 0.4166666666666667)))
[INFO] [01/12/2017 17:33:32.258] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] New flights List()
[INFO] [01/12/2017 17:33:32.258] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Old      fl MapLike()
[INFO] [01/12/2017 17:33:32.258] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Updating fl List()
[INFO] [01/12/2017 17:33:32.258] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Dropped 0 flights before 2016-01-01
[INFO] [01/12/2017 17:33:32.258] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:32.258] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:32.259] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Received GetLatestCrunch(A1, eGate)
[INFO] [01/12/2017 17:33:32.259] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Sender is Actor[akka://streamCrunchTests/system/testActor-2#-419615168]
[INFO] [01/12/2017 17:33:32.259] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] getting crunch for A1/eGate
[INFO] [01/12/2017 17:33:32.259] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:32.260] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] A1/eGate lookup wl 
[INFO] [01/12/2017 17:33:32.260] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1451610000000,3.333333333333333), WL(1451610060000,3.333333333333333), WL(1451610120000,3.333333333333333), WL(1451610180000,3.333333333333333), WL(1451610240000,3.333333333333333), WL(1451610300000,3.333333333333333), WL(1451610360000,3.333333333333333), WL(1451610420000,3.333333333333333), WL(1451610480000,3.333333333333333), WL(1451610540000,3.333333333333333)), eGate -> List(WL(1451610000000,4.166666666666667), WL(1451610060000,4.166666666666667), WL(1451610120000,4.166666666666667), WL(1451610180000,4.166666666666667), WL(1451610240000,4.166666666666667), WL(1451610300000,4.166666666666667), WL(1451610360000,4.166666666666667), WL(1451610420000,4.166666666666667), WL(1451610480000,4.166666666666667), WL(1451610540000,4.166666666666667))))
[INFO] [01/12/2017 17:33:32.261] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-01-01T00:00:00.000Z
[INFO] [01/12/2017 17:33:32.261] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eGate filtering minutes to: 1451606400000 to 1451610000000
[INFO] [01/12/2017 17:33:32.261] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1451606400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:32.261] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eGate
[INFO] [01/12/2017 17:33:32.261] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A1/eGate lookup wl 
[INFO] [01/12/2017 17:33:32.261] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1451610000000,3.333333333333333), WL(1451610060000,3.333333333333333), WL(1451610120000,3.333333333333333), WL(1451610180000,3.333333333333333), WL(1451610240000,3.333333333333333), WL(1451610300000,3.333333333333333), WL(1451610360000,3.333333333333333), WL(1451610420000,3.333333333333333), WL(1451610480000,3.333333333333333), WL(1451610540000,3.333333333333333)), eGate -> List(WL(1451610000000,4.166666666666667), WL(1451610060000,4.166666666666667), WL(1451610120000,4.166666666666667), WL(1451610180000,4.166666666666667), WL(1451610240000,4.166666666666667), WL(1451610300000,4.166666666666667), WL(1451610360000,4.166666666666667), WL(1451610420000,4.166666666666667), WL(1451610480000,4.166666666666667), WL(1451610540000,4.166666666666667))))
[INFO] [01/12/2017 17:33:32.261] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-01-01T00:00:00.000Z
[INFO] [01/12/2017 17:33:32.262] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eGate filtering minutes to: 1451606400000 to 1451610000000
[INFO] [01/12/2017 17:33:32.262] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1451606400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:32.262] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eGate
[INFO] [01/12/2017 17:33:32.264] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk lookup wl 
[INFO] [01/12/2017 17:33:32.264] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate)
[INFO] [01/12/2017 17:33:32.264] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1451610000000,3.333333333333333), WL(1451610060000,3.333333333333333), WL(1451610120000,3.333333333333333), WL(1451610180000,3.333333333333333), WL(1451610240000,3.333333333333333), WL(1451610300000,3.333333333333333), WL(1451610360000,3.333333333333333), WL(1451610420000,3.333333333333333), WL(1451610480000,3.333333333333333), WL(1451610540000,3.333333333333333)), eGate -> List(WL(1451610000000,4.166666666666667), WL(1451610060000,4.166666666666667), WL(1451610120000,4.166666666666667), WL(1451610180000,4.166666666666667), WL(1451610240000,4.166666666666667), WL(1451610300000,4.166666666666667), WL(1451610360000,4.166666666666667), WL(1451610420000,4.166666666666667), WL(1451610480000,4.166666666666667), WL(1451610540000,4.166666666666667))))
[INFO] [01/12/2017 17:33:32.265] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-01-01T00:00:00.000Z
[INFO] [01/12/2017 17:33:32.265] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eeaDesk filtering minutes to: 1451606400000 to 1451610000000
[INFO] [01/12/2017 17:33:32.265] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1451606400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:32.265] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eeaDesk
[INFO] [01/12/2017 17:33:32.265] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A1/eGate Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:32.265] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:32.266] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eGate, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
[INFO] [01/12/2017 17:33:32.266] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate)
[INFO] [01/12/2017 17:33:32.268] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate)
[INFO] [01/12/2017 17:33:32.269] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:32.269] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:32.269] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eeaDesk, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
[INFO] [01/12/2017 17:33:32.272] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] A1/eGate Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:32.272] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:32.272] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eGate, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
2017-01-12 17:33:32,996 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
2017-01-12 17:33:33,011 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
2017-01-12 17:33:33,021 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:33,032 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - about to crunch in R
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:33,072 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - about to crunch in R
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:33,075 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - about to crunch in R
2017-01-12 17:33:33,176 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:33.198] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
2017-01-12 17:33:33,202 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:33.202] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/eeaDesk starting at 1451606400000
2017-01-12 17:33:33,205 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:33.218] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eGate Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
[INFO] [01/12/2017 17:33:33.221] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eGate Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
[INFO] [01/12/2017 17:33:33.622] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/eGate starting at 1451606400000
[INFO] [01/12/2017 17:33:33.647] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] crunchActor received CrunchResultWithTimeAndInterval(1451606400000,60000,Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
[0m[[0minfo[0m] [0mNewStreamFlightCrunchTests[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mStreamed Flight Crunch Tests[0m
[0m[[0minfo[0m] [0m  and we have sent it flights for different terminals A1 and A2[0m
[0m[[0minfo[0m] [0m    [32m+[0m when we ask for the latest crunch for eeaDesk at terminal A1, we get a crunch result only including flights at that terminal[0m
[0m[[0minfo[0m] [0m    [32m+[0m when we ask for the latest crunch for eGates at terminal A1, we get a crunch result only including flights at that terminal[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mTotal for specification NewStreamFlightCrunchTests[0m
[0m[[0minfo[0m] [0m[36mFinished in 5 seconds, 196 ms[0m[0m
[0m[[0minfo[0m] [0m[36m[0m[36m2 examples, 0 failure, 0 error[0m[0m
[0m[[0minfo[0m] [0m[0m

cannot create a JUnit XML printer. Please check that specs2-junit.jar is on the classpath

org.specs2.reporter.JUnitXmlPrinter$
java.net.URLClassLoader.findClass(URLClassLoader.java:381)
java.lang.ClassLoader.loadClass(ClassLoader.java:424)
sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
java.lang.ClassLoader.loadClass(ClassLoader.java:357)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
scalaz.Name$$anon$5.value(Name.scala:18)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$ErrorEffectOps.andFinally(ErrorEffect.scala:74)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:77)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:62)
org.specs2.control.eff.Arrs.go$1(Eff.scala:234)
org.specs2.control.eff.Arrs.apply(Eff.scala:244)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
scalaz.$bslash$div.leftMap(Either.scala:98)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:47)
org.specs2.control.eff.Interpret$class.go$1(Interpret.scala:134)
org.specs2.control.eff.Interpret$class.interpretLoop(Interpret.scala:145)
org.specs2.control.eff.Interpret$.interpretLoop(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret(Interpret.scala:57)
org.specs2.control.eff.Interpret$.interpret(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret1(Interpret.scala:64)
org.specs2.control.eff.Interpret$.interpret1(Interpret.scala:153)
org.specs2.control.eff.ErrorEffect$class.runError(ErrorEffect.scala:65)
org.specs2.control.eff.ErrorEffect$.runError(ErrorEffect.scala:120)
org.specs2.control.package$.executeAction(package.scala:56)
org.specs2.runner.SbtRunner$$anonfun$newTask$1$$anon$4.execute(SbtRunner.scala:39)
sbt.ForkMain$Run$2.call(ForkMain.java:296)
sbt.ForkMain$Run$2.call(ForkMain.java:286)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
java.lang.Thread.run(Thread.java:745)
[INFO] [01/12/2017 17:33:35.202] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] airportConfig is AirportConfig(EDI,List(eeaDesk, eGate),Map(eeaDesk -> 25, eGate -> 5),List(A1),List(SplitRatio(PaxTypeAndQueue(eeaMachineReadable,eeaDesk),0.5), SplitRatio(PaxTypeAndQueue(eeaMachineReadable,eGate),0.5)),Map(A1 -> Map(PaxTypeAndQueue(eeaMachineReadable,eeaDesk) -> 0.3333333333333333, PaxTypeAndQueue(eeaMachineReadable,eGate) -> 0.4166666666666667)))
[INFO] [01/12/2017 17:33:35.202] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Received GetLatestCrunch(A1, eeaDesk)
[INFO] [01/12/2017 17:33:35.202] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Sender is Actor[akka://streamCrunchTests/system/testActor-3#2122464000]
[INFO] [01/12/2017 17:33:35.202] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] getting crunch for A1/eeaDesk
[INFO] [01/12/2017 17:33:35.202] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:35.203] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk lookup wl 
[INFO] [01/12/2017 17:33:35.203] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] the workloads Map()
[INFO] [01/12/2017 17:33:35.203] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eeaDesk
[INFO] [01/12/2017 17:33:35.203] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set()
[ERROR] [01/12/2017 17:33:35.205] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Failed to crunch A1/eeaDesk
java.util.NoSuchElementException: key not found: eeaDesk
	at scala.collection.MapLike$class.default(MapLike.scala:228)
	at scala.collection.AbstractMap.default(Map.scala:59)
	at scala.collection.MapLike$class.apply(MapLike.scala:141)
	at scala.collection.AbstractMap.apply(Map.scala:59)
	at controllers.CrunchActor$$anonfun$performCrunch$1$$anonfun$5.apply(CrunchActor.scala:172)
	at controllers.CrunchActor$$anonfun$performCrunch$1$$anonfun$5.apply(CrunchActor.scala:169)
	at scala.util.Success.flatMap(Try.scala:231)
	at controllers.CrunchActor$$anonfun$performCrunch$1.apply(CrunchActor.scala:168)
	at controllers.CrunchActor$$anonfun$performCrunch$1.apply(CrunchActor.scala:150)
	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237)
	at scala.util.Try$.apply(Try.scala:192)
	at scala.util.Success.map(Try.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at scala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask.exec(ExecutionContextImpl.scala:121)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)

[ERROR] [01/12/2017 17:33:35.206] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Failure in calculating crunch for A1/eeaDesk
java.util.NoSuchElementException: key not found: eeaDesk
	at scala.collection.MapLike$class.default(MapLike.scala:228)
	at scala.collection.AbstractMap.default(Map.scala:59)
	at scala.collection.MapLike$class.apply(MapLike.scala:141)
	at scala.collection.AbstractMap.apply(Map.scala:59)
	at controllers.CrunchActor$$anonfun$performCrunch$1$$anonfun$5.apply(CrunchActor.scala:172)
	at controllers.CrunchActor$$anonfun$performCrunch$1$$anonfun$5.apply(CrunchActor.scala:169)
	at scala.util.Success.flatMap(Try.scala:231)
	at controllers.CrunchActor$$anonfun$performCrunch$1.apply(CrunchActor.scala:168)
	at controllers.CrunchActor$$anonfun$performCrunch$1.apply(CrunchActor.scala:150)
	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237)
	at scala.util.Try$.apply(Try.scala:192)
	at scala.util.Success.map(Try.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at scala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask.exec(ExecutionContextImpl.scala:121)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)

[INFO] [01/12/2017 17:33:35.214] [streamCrunchTests-akka.actor.default-dispatcher-5] [akka://streamCrunchTests/user/CrunchActor] unsuccessful crunch here A1/eeaDesk
here we are, born to be kings
2017-01-12 17:33:35,368 [ForkJoinPool-2-worker-7] INFO  controllers.ProdCrunchActor - Got flights by terminal (A2,List(ApiFlight(,,,,,,,,1,100,0,,,2,EDI,A2,,EZ456,,2016-09-01T10:30,0)))
[INFO] [01/12/2017 17:33:35.360] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] airportConfig is AirportConfig(EDI,List(eeaDesk, eGate, nonEeaDesk),Map(eeaDesk -> 20, eGate -> 25, nonEeaDesk -> 45),List(A1, A2),List(SplitRatio(PaxTypeAndQueue(eeaMachineReadable,eeaDesk),0.4875), SplitRatio(PaxTypeAndQueue(eeaMachineReadable,eGate),0.1625), SplitRatio(PaxTypeAndQueue(eeaNonMachineReadable,eeaDesk),0.1625), SplitRatio(PaxTypeAndQueue(visaNational,nonEeaDesk),0.05), SplitRatio(PaxTypeAndQueue(nonVisaNational,nonEeaDesk),0.05)),Map(A1 -> Map(PaxTypeAndQueue(eeaMachineReadable,eeaDesk) -> 0.26666666666666666, PaxTypeAndQueue(nonVisaNational,nonEeaDesk) -> 1.0666666666666667, PaxTypeAndQueue(visaNational,nonEeaDesk) -> 1.25, PaxTypeAndQueue(eeaNonMachineReadable,eeaDesk) -> 0.8333333333333334, PaxTypeAndQueue(eeaMachineReadable,eGate) -> 0.4166666666666667), A2 -> Map(PaxTypeAndQueue(eeaMachineReadable,eeaDesk) -> 0.5, PaxTypeAndQueue(nonVisaNational,nonEeaDesk) -> 2.0, PaxTypeAndQueue(visaNational,nonEeaDesk) -> 2.0, PaxTypeAndQueue(eeaNonMachineReadable,eeaDesk) -> 0.8333333333333334, PaxTypeAndQueue(eeaMachineReadable,eGate) -> 0.4166666666666667)))
[INFO] [01/12/2017 17:33:35.367] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] New flights List()
2017-01-12 17:33:35,368 [ForkJoinPool-2-worker-1] INFO  controllers.ProdCrunchActor - Got flights by terminal (A2,List(ApiFlight(,,,,,,,,1,100,0,,,2,EDI,A2,,EZ456,,2016-09-01T10:30,0)))
[INFO] [01/12/2017 17:33:35.367] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Old      fl MapLike()
[INFO] [01/12/2017 17:33:35.367] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Updating fl List()
[INFO] [01/12/2017 17:33:35.367] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Dropped 0 flights before 2016-09-01
[INFO] [01/12/2017 17:33:35.367] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:35.368] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:35.368] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:35.368] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:35.368] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:35.368] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
2017-01-12 17:33:35,368 [ForkJoinPool-2-worker-3] INFO  controllers.ProdCrunchActor - Got flights by terminal (A2,List(ApiFlight(,,,,,,,,1,100,0,,,2,EDI,A2,,EZ456,,2016-09-01T10:30,0)))
[INFO] [01/12/2017 17:33:35.368] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Received GetLatestCrunch(A1, eeaDesk)
[INFO] [01/12/2017 17:33:35.369] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Sender is Actor[akka://streamCrunchTests/system/testActor-4#797740071]
[INFO] [01/12/2017 17:33:35.369] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] getting crunch for A1/eeaDesk
[INFO] [01/12/2017 17:33:35.369] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
2017-01-12 17:33:35,369 [ForkJoinPool-2-worker-5] INFO  controllers.ProdCrunchActor - Got flights by terminal (A2,List(ApiFlight(,,,,,,,,1,100,0,,,2,EDI,A2,,EZ456,,2016-09-01T10:30,0)))
2017-01-12 17:33:35,369 [ForkJoinPool-2-worker-7] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
2017-01-12 17:33:35,370 [ForkJoinPool-2-worker-1] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
2017-01-12 17:33:35,371 [ForkJoinPool-2-worker-3] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
2017-01-12 17:33:35,373 [ForkJoinPool-2-worker-5] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
[INFO] [01/12/2017 17:33:35.375] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] A1/eGate lookup wl 
[INFO] [01/12/2017 17:33:35.376] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A2 -> Map(eeaDesk -> List(WL(1472725800000,7.583333333333334), WL(1472725860000,7.583333333333334), WL(1472725920000,7.583333333333334), WL(1472725980000,7.583333333333334), WL(1472726040000,7.583333333333334)), eGate -> List(WL(1472725800000,1.3541666666666667), WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725800000,4.0), WL(1472725860000,4.0), WL(1472725920000,4.0), WL(1472725980000,4.0), WL(1472726040000,4.0))), A1 -> Map(eeaDesk -> List(WL(1472725860000,5.308333333333334), WL(1472725920000,5.308333333333334), WL(1472725980000,5.308333333333334), WL(1472726040000,5.308333333333334), WL(1472726100000,5.308333333333334), WL(1472726160000,5.308333333333334), WL(1472726220000,5.308333333333334), WL(1472726280000,5.308333333333334), WL(1472726340000,5.308333333333334), WL(1472726400000,5.308333333333334)), eGate -> List(WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667), WL(1472726100000,1.3541666666666667), WL(1472726160000,1.3541666666666667), WL(1472726220000,1.3541666666666667), WL(1472726280000,1.3541666666666667), WL(1472726340000,1.3541666666666667), WL(1472726400000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725860000,2.3166666666666664), WL(1472725920000,2.3166666666666664), WL(1472725980000,2.3166666666666664), WL(1472726040000,2.3166666666666664), WL(1472726100000,2.3166666666666664), WL(1472726160000,2.3166666666666664), WL(1472726220000,2.3166666666666664), WL(1472726280000,2.3166666666666664), WL(1472726340000,2.3166666666666664), WL(1472726400000,2.3166666666666664))))
[INFO] [01/12/2017 17:33:35.376] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:35.376] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eGate filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:35.376] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:35.376] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eGate
[INFO] [01/12/2017 17:33:35.379] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:35.380] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] A1/eGate Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:35.380] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:35.380] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eGate, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
[INFO] [01/12/2017 17:33:35.388] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] A2/eeaDesk lookup wl 
[INFO] [01/12/2017 17:33:35.388] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A2 -> Map(eeaDesk -> List(WL(1472725800000,7.583333333333334), WL(1472725860000,7.583333333333334), WL(1472725920000,7.583333333333334), WL(1472725980000,7.583333333333334), WL(1472726040000,7.583333333333334)), eGate -> List(WL(1472725800000,1.3541666666666667), WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725800000,4.0), WL(1472725860000,4.0), WL(1472725920000,4.0), WL(1472725980000,4.0), WL(1472726040000,4.0))), A1 -> Map(eeaDesk -> List(WL(1472725860000,5.308333333333334), WL(1472725920000,5.308333333333334), WL(1472725980000,5.308333333333334), WL(1472726040000,5.308333333333334), WL(1472726100000,5.308333333333334), WL(1472726160000,5.308333333333334), WL(1472726220000,5.308333333333334), WL(1472726280000,5.308333333333334), WL(1472726340000,5.308333333333334), WL(1472726400000,5.308333333333334)), eGate -> List(WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667), WL(1472726100000,1.3541666666666667), WL(1472726160000,1.3541666666666667), WL(1472726220000,1.3541666666666667), WL(1472726280000,1.3541666666666667), WL(1472726340000,1.3541666666666667), WL(1472726400000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725860000,2.3166666666666664), WL(1472725920000,2.3166666666666664), WL(1472725980000,2.3166666666666664), WL(1472726040000,2.3166666666666664), WL(1472726100000,2.3166666666666664), WL(1472726160000,2.3166666666666664), WL(1472726220000,2.3166666666666664), WL(1472726280000,2.3166666666666664), WL(1472726340000,2.3166666666666664), WL(1472726400000,2.3166666666666664))))
[INFO] [01/12/2017 17:33:35.389] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:35.389] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] ^^^A2/eeaDesk filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:35.389] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:35.389] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A2/eeaDesk
[INFO] [01/12/2017 17:33:35.391] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A1/nonEeaDesk lookup wl 
[INFO] [01/12/2017 17:33:35.392] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A2 -> Map(eeaDesk -> List(WL(1472725800000,7.583333333333334), WL(1472725860000,7.583333333333334), WL(1472725920000,7.583333333333334), WL(1472725980000,7.583333333333334), WL(1472726040000,7.583333333333334)), eGate -> List(WL(1472725800000,1.3541666666666667), WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725800000,4.0), WL(1472725860000,4.0), WL(1472725920000,4.0), WL(1472725980000,4.0), WL(1472726040000,4.0))), A1 -> Map(eeaDesk -> List(WL(1472725860000,5.308333333333334), WL(1472725920000,5.308333333333334), WL(1472725980000,5.308333333333334), WL(1472726040000,5.308333333333334), WL(1472726100000,5.308333333333334), WL(1472726160000,5.308333333333334), WL(1472726220000,5.308333333333334), WL(1472726280000,5.308333333333334), WL(1472726340000,5.308333333333334), WL(1472726400000,5.308333333333334)), eGate -> List(WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667), WL(1472726100000,1.3541666666666667), WL(1472726160000,1.3541666666666667), WL(1472726220000,1.3541666666666667), WL(1472726280000,1.3541666666666667), WL(1472726340000,1.3541666666666667), WL(1472726400000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725860000,2.3166666666666664), WL(1472725920000,2.3166666666666664), WL(1472725980000,2.3166666666666664), WL(1472726040000,2.3166666666666664), WL(1472726100000,2.3166666666666664), WL(1472726160000,2.3166666666666664), WL(1472726220000,2.3166666666666664), WL(1472726280000,2.3166666666666664), WL(1472726340000,2.3166666666666664), WL(1472726400000,2.3166666666666664))))
[INFO] [01/12/2017 17:33:35.392] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:35.392] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/nonEeaDesk filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:35.392] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:35.392] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/nonEeaDesk
[INFO] [01/12/2017 17:33:35.394] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:35.395] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk lookup wl 
[INFO] [01/12/2017 17:33:35.396] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A2 -> Map(eeaDesk -> List(WL(1472725800000,7.583333333333334), WL(1472725860000,7.583333333333334), WL(1472725920000,7.583333333333334), WL(1472725980000,7.583333333333334), WL(1472726040000,7.583333333333334)), eGate -> List(WL(1472725800000,1.3541666666666667), WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725800000,4.0), WL(1472725860000,4.0), WL(1472725920000,4.0), WL(1472725980000,4.0), WL(1472726040000,4.0))), A1 -> Map(eeaDesk -> List(WL(1472725860000,5.308333333333334), WL(1472725920000,5.308333333333334), WL(1472725980000,5.308333333333334), WL(1472726040000,5.308333333333334), WL(1472726100000,5.308333333333334), WL(1472726160000,5.308333333333334), WL(1472726220000,5.308333333333334), WL(1472726280000,5.308333333333334), WL(1472726340000,5.308333333333334), WL(1472726400000,5.308333333333334)), eGate -> List(WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667), WL(1472726100000,1.3541666666666667), WL(1472726160000,1.3541666666666667), WL(1472726220000,1.3541666666666667), WL(1472726280000,1.3541666666666667), WL(1472726340000,1.3541666666666667), WL(1472726400000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725860000,2.3166666666666664), WL(1472725920000,2.3166666666666664), WL(1472725980000,2.3166666666666664), WL(1472726040000,2.3166666666666664), WL(1472726100000,2.3166666666666664), WL(1472726160000,2.3166666666666664), WL(1472726220000,2.3166666666666664), WL(1472726280000,2.3166666666666664), WL(1472726340000,2.3166666666666664), WL(1472726400000,2.3166666666666664))))
[INFO] [01/12/2017 17:33:35.396] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:35.396] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eeaDesk filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:35.396] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:35.396] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eeaDesk
[INFO] [01/12/2017 17:33:35.398] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:35.402] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:35.403] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] A2/eeaDesk Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:35.403] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:35.403] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A2, eeaDesk, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
[INFO] [01/12/2017 17:33:35.410] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A1/nonEeaDesk Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:35.410] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:35.410] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, nonEeaDesk, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
[INFO] [01/12/2017 17:33:35.414] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:35.414] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:35.414] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eeaDesk, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
2017-01-12 17:33:35,949 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
2017-01-12 17:33:35,974 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
2017-01-12 17:33:36,009 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
deskRecsVsActualDesks
[0m[[0minfo[0m] [0m------Starting Suite spatutorial.client.services.StaffQueueAssignmentTests------[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.StaffQueueAssignmentTests.DeskRecHandler		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.StaffQueueAssignmentTests		[32mSuccess[0m[0m
2017-01-12 17:33:36,123 [ForkJoinPool-2-worker-7] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:36,127 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - about to crunch in R
-----deskRecsVsActualDesks: eeaDesk
gotDeskRecsvsAct, 1
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:36,158 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - about to crunch in R
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:36,181 [ForkJoinPool-2-worker-7] INFO  services.TryRenjin$ - about to crunch in R
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:36,190 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - about to crunch in R
deskRecsVsActualDesks
-----deskRecsVsActualDesks: eeaDesk
gotDeskRecsvsAct, 1
deskRecsVsActualDesks
2017-01-12 17:33:36,345 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - crunched in R
2017-01-12 17:33:36,375 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:36.378] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
[INFO] [01/12/2017 17:33:36.378] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/eeaDesk starting at 1472684400000
[INFO] [01/12/2017 17:33:36.382] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/nonEeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
2017-01-12 17:33:36,383 [ForkJoinPool-2-worker-3] INFO  controllers.ProdCrunchActor - Got flights by terminal (A2,List(ApiFlight(,,,,,,,,1,100,0,,,2,EDI,A2,,EZ456,,2016-09-01T10:30,0)))
[INFO] [01/12/2017 17:33:36.382] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/nonEeaDesk starting at 1472684400000
2017-01-12 17:33:36,384 [ForkJoinPool-2-worker-3] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
[INFO] [01/12/2017 17:33:36.385] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A2/nonEeaDesk lookup wl 
2017-01-12 17:33:36,385 [ForkJoinPool-2-worker-1] INFO  controllers.ProdCrunchActor - Got flights by terminal (A2,List(ApiFlight(,,,,,,,,1,100,0,,,2,EDI,A2,,EZ456,,2016-09-01T10:30,0)))
2017-01-12 17:33:36,386 [ForkJoinPool-2-worker-1] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
-----deskRecsVsActualDesks: nonEeaDesk
2017-01-12 17:33:36,392 [ForkJoinPool-2-worker-7] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:36.400] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A2/eGate lookup wl 
2017-01-12 17:33:36,394 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:36.401] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A2 -> Map(eeaDesk -> List(WL(1472725800000,7.583333333333334), WL(1472725860000,7.583333333333334), WL(1472725920000,7.583333333333334), WL(1472725980000,7.583333333333334), WL(1472726040000,7.583333333333334)), eGate -> List(WL(1472725800000,1.3541666666666667), WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725800000,4.0), WL(1472725860000,4.0), WL(1472725920000,4.0), WL(1472725980000,4.0), WL(1472726040000,4.0))), A1 -> Map(eeaDesk -> List(WL(1472725860000,5.308333333333334), WL(1472725920000,5.308333333333334), WL(1472725980000,5.308333333333334), WL(1472726040000,5.308333333333334), WL(1472726100000,5.308333333333334), WL(1472726160000,5.308333333333334), WL(1472726220000,5.308333333333334), WL(1472726280000,5.308333333333334), WL(1472726340000,5.308333333333334), WL(1472726400000,5.308333333333334)), eGate -> List(WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667), WL(1472726100000,1.3541666666666667), WL(1472726160000,1.3541666666666667), WL(1472726220000,1.3541666666666667), WL(1472726280000,1.3541666666666667), WL(1472726340000,1.3541666666666667), WL(1472726400000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725860000,2.3166666666666664), WL(1472725920000,2.3166666666666664), WL(1472725980000,2.3166666666666664), WL(1472726040000,2.3166666666666664), WL(1472726100000,2.3166666666666664), WL(1472726160000,2.3166666666666664), WL(1472726220000,2.3166666666666664), WL(1472726280000,2.3166666666666664), WL(1472726340000,2.3166666666666664), WL(1472726400000,2.3166666666666664))))
[INFO] [01/12/2017 17:33:36.402] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:36.402] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] ^^^A2/eGate filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:36.402] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:36.402] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A2/eGate
[INFO] [01/12/2017 17:33:36.404] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:36.404] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A2/eGate Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:36.404] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:36.404] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A2, eGate, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
[INFO] [01/12/2017 17:33:36.408] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A2 -> Map(eeaDesk -> List(WL(1472725800000,7.583333333333334), WL(1472725860000,7.583333333333334), WL(1472725920000,7.583333333333334), WL(1472725980000,7.583333333333334), WL(1472726040000,7.583333333333334)), eGate -> List(WL(1472725800000,1.3541666666666667), WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725800000,4.0), WL(1472725860000,4.0), WL(1472725920000,4.0), WL(1472725980000,4.0), WL(1472726040000,4.0))), A1 -> Map(eeaDesk -> List(WL(1472725860000,5.308333333333334), WL(1472725920000,5.308333333333334), WL(1472725980000,5.308333333333334), WL(1472726040000,5.308333333333334), WL(1472726100000,5.308333333333334), WL(1472726160000,5.308333333333334), WL(1472726220000,5.308333333333334), WL(1472726280000,5.308333333333334), WL(1472726340000,5.308333333333334), WL(1472726400000,5.308333333333334)), eGate -> List(WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667), WL(1472726100000,1.3541666666666667), WL(1472726160000,1.3541666666666667), WL(1472726220000,1.3541666666666667), WL(1472726280000,1.3541666666666667), WL(1472726340000,1.3541666666666667), WL(1472726400000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725860000,2.3166666666666664), WL(1472725920000,2.3166666666666664), WL(1472725980000,2.3166666666666664), WL(1472726040000,2.3166666666666664), WL(1472726100000,2.3166666666666664), WL(1472726160000,2.3166666666666664), WL(1472726220000,2.3166666666666664), WL(1472726280000,2.3166666666666664), WL(1472726340000,2.3166666666666664), WL(1472726400000,2.3166666666666664))))
[INFO] [01/12/2017 17:33:36.408] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:36.408] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] ^^^A2/nonEeaDesk filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:36.408] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:36.408] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A2/nonEeaDesk
[INFO] [01/12/2017 17:33:36.409] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:36.409] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A2/nonEeaDesk Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:36.409] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:36.409] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A2, nonEeaDesk, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
[INFO] [01/12/2017 17:33:36.419] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eGate Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
[INFO] [01/12/2017 17:33:36.420] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A2/eeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
2017-01-12 17:33:36,420 [ForkJoinPool-2-worker-5] INFO  controllers.ProdCrunchActor - Got flights by terminal (A2,List(ApiFlight(,,,,,,,,1,100,0,,,2,EDI,A2,,EZ456,,2016-09-01T10:30,0)))
[INFO] [01/12/2017 17:33:36.420] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A2/eeaDesk starting at 1472684400000
2017-01-12 17:33:36,421 [ForkJoinPool-2-worker-5] INFO  controllers.ProdCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
[INFO] [01/12/2017 17:33:36.434] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk lookup wl 
[INFO] [01/12/2017 17:33:36.435] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A2 -> Map(eeaDesk -> List(WL(1472725800000,7.583333333333334), WL(1472725860000,7.583333333333334), WL(1472725920000,7.583333333333334), WL(1472725980000,7.583333333333334), WL(1472726040000,7.583333333333334)), eGate -> List(WL(1472725800000,1.3541666666666667), WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725800000,4.0), WL(1472725860000,4.0), WL(1472725920000,4.0), WL(1472725980000,4.0), WL(1472726040000,4.0))), A1 -> Map(eeaDesk -> List(WL(1472725860000,5.308333333333334), WL(1472725920000,5.308333333333334), WL(1472725980000,5.308333333333334), WL(1472726040000,5.308333333333334), WL(1472726100000,5.308333333333334), WL(1472726160000,5.308333333333334), WL(1472726220000,5.308333333333334), WL(1472726280000,5.308333333333334), WL(1472726340000,5.308333333333334), WL(1472726400000,5.308333333333334)), eGate -> List(WL(1472725860000,1.3541666666666667), WL(1472725920000,1.3541666666666667), WL(1472725980000,1.3541666666666667), WL(1472726040000,1.3541666666666667), WL(1472726100000,1.3541666666666667), WL(1472726160000,1.3541666666666667), WL(1472726220000,1.3541666666666667), WL(1472726280000,1.3541666666666667), WL(1472726340000,1.3541666666666667), WL(1472726400000,1.3541666666666667)), nonEeaDesk -> List(WL(1472725860000,2.3166666666666664), WL(1472725920000,2.3166666666666664), WL(1472725980000,2.3166666666666664), WL(1472726040000,2.3166666666666664), WL(1472726100000,2.3166666666666664), WL(1472726160000,2.3166666666666664), WL(1472726220000,2.3166666666666664), WL(1472726280000,2.3166666666666664), WL(1472726340000,2.3166666666666664), WL(1472726400000,2.3166666666666664))))
[INFO] [01/12/2017 17:33:36.435] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:36.435] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eeaDesk filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:36.435] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:36.435] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eeaDesk
[INFO] [01/12/2017 17:33:36.436] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:36.436] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:36.437] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:36.437] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eeaDesk, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
-----deskRecsVsActualDesks: eeaDesk
gotDeskRecsvsAct, 2
deskRecsVsActualDesks
-----deskRecsVsActualDesks: nonEeaDesk
2017-01-12 17:33:36,854 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
2017-01-12 17:33:36,864 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:36,875 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - about to crunch in R
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:36,902 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - about to crunch in R
2017-01-12 17:33:36,920 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:36,954 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - about to crunch in R
-----deskRecsVsActualDesks: eeaDesk
gotDeskRecsvsAct, 2
[INFO] [01/12/2017 17:33:37.010] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/eGate starting at 1472684400000
2017-01-12 17:33:37,028 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:37.053] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A2/eGate Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
2017-01-12 17:33:37,091 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - crunched in R
2017-01-12 17:33:37,095 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:37.100] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A2/nonEeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
[INFO] [01/12/2017 17:33:37.100] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A2/nonEeaDesk starting at 1472684400000
[INFO] [01/12/2017 17:33:37.105] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
[INFO] [01/12/2017 17:33:37.115] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/eeaDesk starting at 1472684400000
[INFO] [01/12/2017 17:33:37.131] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] crunchActor received CrunchResultWithTimeAndInterval(1472684400000,60000,Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
[INFO] [01/12/2017 17:33:37.132] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] crunchActor received CrunchResultWithTimeAndInterval(1472684400000,60000,Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
[INFO] [01/12/2017 17:33:37.132] [streamCrunchTests-akka.actor.default-dispatcher-6] [akka://streamCrunchTests/user/CrunchActor] crunchActor received CrunchResultWithTimeAndInterval(1472684400000,60000,Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
[INFO] [01/12/2017 17:33:37.132] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] crunchActor received CrunchResultWithTimeAndInterval(1472684400000,60000,Vector(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
[INFO] [01/12/2017 17:33:37.132] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] crunchActor received CrunchResultWithTimeAndInterval(1472684400000,60000,Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
[0m[[0minfo[0m] [0m---------Starting Suite spatutorial.client.components.HeatmapDataTests---------[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.HeatmapDataTests.HeatmapData.Given eeaDesk queue, can get heatmap series from ratio of deskrecs to actual desks, for 1 hour, where rec is 2 and user is 1 then it should be a 2		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.HeatmapDataTests.HeatmapData.Given eeaDesk queue get heatmap series from ratio of deskrecs to actual desks, for 1 hour, where rec is 10 and user is 2 then it should be a 5		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.HeatmapDataTests.HeatmapData.Given 2 queues nonEeaDesk and eeaDesk queue get heatmap series from ratio of deskrecs to actual desks, for 1 hour, where rec is 10 and user is 2 then it should be a 5		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.HeatmapDataTests.HeatmapData.Given 2 queues nonEeaDesk and eeaDesk queue get heatmap series from ratio of deskrecs to actual desks, for 2 hours, where rec is 10 and user is 2 then it should be a 5		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.HeatmapDataTests.HeatmapData		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.HeatmapDataTests.Given a map of queuename to pending simulation resultWhen I call waitTimes, Then I should get a Pending back		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.HeatmapDataTests.Given a map of queuename to ready simulation resultWhen I call waitTimes, Then I should get a ready back		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.HeatmapDataTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mUnexpectedTerminalInFlightFeedsWhenCrunching[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mgiven a crunch actor[0m
[0m[[0minfo[0m] [0m  and we've not sent it flights[0m
[0m[[0minfo[0m] [0m    [32m+[0m when we ask for the latest crunch, we get a NoCrunchAvailable[0m
[0m[[0minfo[0m] [0m  given a crunch actor with airport config for terminals A1 and A2[0m
[0m[[0minfo[0m] [0m    when we send it a flight for A3[0m
will update DeskRecTimeslot(2700000,25) into Vector(DeskRecTimeslot(0,30), DeskRecTimeslot(900000,30), DeskRecTimeslot(1800000,30), DeskRecTimeslot(2700000,30))...
add old: idx: 3, newItem: DeskRecTimeslot(2700000,25), DeskRecTimeslot(2700000,30)
[0m[[0minfo[0m] [0m      [32m+[0m then the crunch should log an error (untested) and ??ignore the flight??, and crunch successfully[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mTotal for specification UnexpectedTerminalInFlightFeedsWhenCrunching[0m
[0m[[0minfo[0m] [0m[36mFinished in 1 second, 935 ms[0m[0m
[0m[[0minfo[0m] [0m[36m[0m[36m2 examples, 0 failure, 0 error[0m[0m
[0m[[0minfo[0m] [0m[0m
diode.EffectSingle@11
got a new value for LGW AirportInfo(Gatwick,Gatwick,United Kingdom,LGW)

cannot create a JUnit XML printer. Please check that specs2-junit.jar is on the classpath

org.specs2.reporter.JUnitXmlPrinter$
java.net.URLClassLoader.findClass(URLClassLoader.java:381)
java.lang.ClassLoader.loadClass(ClassLoader.java:424)
sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
java.lang.ClassLoader.loadClass(ClassLoader.java:357)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
scalaz.Name$$anon$5.value(Name.scala:18)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$ErrorEffectOps.andFinally(ErrorEffect.scala:74)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:77)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:62)
org.specs2.control.eff.Arrs.go$1(Eff.scala:234)
org.specs2.control.eff.Arrs.apply(Eff.scala:244)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
scalaz.$bslash$div.leftMap(Either.scala:98)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:47)
org.specs2.control.eff.Interpret$class.go$1(Interpret.scala:134)
org.specs2.control.eff.Interpret$class.interpretLoop(Interpret.scala:145)
org.specs2.control.eff.Interpret$.interpretLoop(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret(Interpret.scala:57)
org.specs2.control.eff.Interpret$.interpret(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret1(Interpret.scala:64)
org.specs2.control.eff.Interpret$.interpret1(Interpret.scala:153)
org.specs2.control.eff.ErrorEffect$class.runError(ErrorEffect.scala:65)
org.specs2.control.eff.ErrorEffect$.runError(ErrorEffect.scala:120)
org.specs2.control.package$.executeAction(package.scala:56)
org.specs2.runner.SbtRunner$$anonfun$newTask$1$$anon$4.execute(SbtRunner.scala:39)
sbt.ForkMain$Run$2.call(ForkMain.java:296)
sbt.ForkMain$Run$2.call(ForkMain.java:286)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
java.lang.Thread.run(Thread.java:745)
got a new value for LHR AirportInfo(LHR,London,United Kingdom,LHR)
composing handlers
finding handler for UpdateWorkloads(Map(T1 -> Map(eeaGate -> (List(WL(0,1.2)),List(Pax(0,1))))))
finding handler for UpdateWorkloads(Map(T1 -> Map(eeaGate -> (List(WL(0,1.2)),List(Pax(0,1))))))
finding handler for UpdateCrunchResult(A1,EEA,CrunchResultWithTimeAndInterval(0,60000,Vector(33),List(29)))
finding handler for UpdateCrunchResult(A1,EEA,CrunchResultWithTimeAndInterval(0,60000,Vector(33),List(29)))
finding handler for UpdateCrunchResult(A1,EEA,CrunchResultWithTimeAndInterval(0,60000,Vector(33),List(29)))
UpdateCrunchResult EEA. firstTimeMillis: 0
[INFO] [01/12/2017 17:33:38.484] [streamCrunchTests-akka.actor.default-dispatcher-7] [akka://streamCrunchTests/user/flightsActor] Adding 1 new flights
[INFO] [01/12/2017 17:33:38.484] [streamCrunchTests-akka.actor.default-dispatcher-7] [akka://streamCrunchTests/user/flightsActor] New flights List()
[INFO] [01/12/2017 17:33:38.485] [streamCrunchTests-akka.actor.default-dispatcher-7] [akka://streamCrunchTests/user/flightsActor] Old      fl MapLike()
[INFO] [01/12/2017 17:33:38.485] [streamCrunchTests-akka.actor.default-dispatcher-7] [akka://streamCrunchTests/user/flightsActor] Updating fl List()
[INFO] [01/12/2017 17:33:38.485] [streamCrunchTests-akka.actor.default-dispatcher-7] [akka://streamCrunchTests/user/flightsActor] Dropped 0 flights before 2017-01-12
initialising deskrecschart
raw shifts are 
Shifts are List()
finding handler for UpdateCrunchResult(A1,eGates,CrunchResultWithTimeAndInterval(0,60000,Vector(33),List(29)))
finding handler for UpdateCrunchResult(A1,eGates,CrunchResultWithTimeAndInterval(0,60000,Vector(33),List(29)))
finding handler for UpdateCrunchResult(A1,eGates,CrunchResultWithTimeAndInterval(0,60000,Vector(33),List(29)))
UpdateCrunchResult eGates. firstTimeMillis: 0
raw shifts are 
Shifts are List()
[INFO] [01/12/2017 17:33:38.605] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] airportConfig is AirportConfig(EDI,List(eeaDesk, eGate, nonEeaDesk),Map(eeaDesk -> 20, eGate -> 25, nonEeaDesk -> 45),List(A1, A2),List(SplitRatio(PaxTypeAndQueue(eeaMachineReadable,eeaDesk),0.4875), SplitRatio(PaxTypeAndQueue(eeaMachineReadable,eGate),0.1625), SplitRatio(PaxTypeAndQueue(eeaNonMachineReadable,eeaDesk),0.1625), SplitRatio(PaxTypeAndQueue(visaNational,nonEeaDesk),0.05), SplitRatio(PaxTypeAndQueue(nonVisaNational,nonEeaDesk),0.05)),Map(A1 -> Map(PaxTypeAndQueue(eeaMachineReadable,eeaDesk) -> 0.26666666666666666, PaxTypeAndQueue(nonVisaNational,nonEeaDesk) -> 1.0666666666666667, PaxTypeAndQueue(visaNational,nonEeaDesk) -> 1.25, PaxTypeAndQueue(eeaNonMachineReadable,eeaDesk) -> 0.8333333333333334, PaxTypeAndQueue(eeaMachineReadable,eGate) -> 0.4166666666666667), A2 -> Map(PaxTypeAndQueue(eeaMachineReadable,eeaDesk) -> 0.5, PaxTypeAndQueue(nonVisaNational,nonEeaDesk) -> 2.0, PaxTypeAndQueue(visaNational,nonEeaDesk) -> 2.0, PaxTypeAndQueue(eeaNonMachineReadable,eeaDesk) -> 0.8333333333333334, PaxTypeAndQueue(eeaMachineReadable,eGate) -> 0.4166666666666667)))
[INFO] [01/12/2017 17:33:38.606] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] New flights List()
2017-01-12 17:33:38,608 [ForkJoinPool-2-worker-5] INFO  s.FlightCrunchInteractionTests$TestCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
2017-01-12 17:33:38,610 [ForkJoinPool-2-worker-3] INFO  s.FlightCrunchInteractionTests$TestCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
[INFO] [01/12/2017 17:33:38.606] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Old      fl MapLike()
[INFO] [01/12/2017 17:33:38.606] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Updating fl List()
[INFO] [01/12/2017 17:33:38.606] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Dropped 0 flights before 2000-01-01
[INFO] [01/12/2017 17:33:38.606] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:38.607] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:38.609] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk lookup wl 
[INFO] [01/12/2017 17:33:38.609] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1472725860000,3.1199999999999997), WL(1472725920000,3.1199999999999997), WL(1472725980000,3.1199999999999997), WL(1472726040000,3.1199999999999997), WL(1472726100000,3.1199999999999997), WL(1472726160000,3.1199999999999997), WL(1472726220000,3.1199999999999997), WL(1472726280000,3.1199999999999997), WL(1472726340000,3.1199999999999997), WL(1472726400000,3.1199999999999997)), eGate -> List(WL(1472725860000,2.625), WL(1472725920000,2.625), WL(1472725980000,2.625), WL(1472726040000,2.625), WL(1472726100000,2.625), WL(1472726160000,2.625), WL(1472726220000,2.625), WL(1472726280000,2.625), WL(1472726340000,2.625), WL(1472726400000,2.625)), nonEeaDesk -> List(WL(1472725860000,2.243333333333333), WL(1472725920000,2.243333333333333), WL(1472725980000,2.243333333333333), WL(1472726040000,2.243333333333333), WL(1472726100000,2.243333333333333), WL(1472726160000,2.243333333333333), WL(1472726220000,2.243333333333333), WL(1472726280000,2.243333333333333), WL(1472726340000,2.243333333333333), WL(1472726400000,2.243333333333333))))
[INFO] [01/12/2017 17:33:38.609] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:38.610] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eeaDesk filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:38.610] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:38.610] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eeaDesk
[INFO] [01/12/2017 17:33:38.614] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:38.615] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:38.615] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:38.615] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
[INFO] [01/12/2017 17:33:38.615] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A1/eGate lookup wl 
[INFO] [01/12/2017 17:33:38.616] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1472725860000,3.1199999999999997), WL(1472725920000,3.1199999999999997), WL(1472725980000,3.1199999999999997), WL(1472726040000,3.1199999999999997), WL(1472726100000,3.1199999999999997), WL(1472726160000,3.1199999999999997), WL(1472726220000,3.1199999999999997), WL(1472726280000,3.1199999999999997), WL(1472726340000,3.1199999999999997), WL(1472726400000,3.1199999999999997)), eGate -> List(WL(1472725860000,2.625), WL(1472725920000,2.625), WL(1472725980000,2.625), WL(1472726040000,2.625), WL(1472726100000,2.625), WL(1472726160000,2.625), WL(1472726220000,2.625), WL(1472726280000,2.625), WL(1472726340000,2.625), WL(1472726400000,2.625)), nonEeaDesk -> List(WL(1472725860000,2.243333333333333), WL(1472725920000,2.243333333333333), WL(1472725980000,2.243333333333333), WL(1472726040000,2.243333333333333), WL(1472726100000,2.243333333333333), WL(1472726160000,2.243333333333333), WL(1472726220000,2.243333333333333), WL(1472726280000,2.243333333333333), WL(1472726340000,2.243333333333333), WL(1472726400000,2.243333333333333))))
[INFO] [01/12/2017 17:33:38.616] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:38.616] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eGate filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:38.616] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:38.616] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eGate
2017-01-12 17:33:38,617 [ForkJoinPool-2-worker-7] INFO  s.FlightCrunchInteractionTests$TestCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
[INFO] [01/12/2017 17:33:38.618] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] A1/nonEeaDesk lookup wl 
[INFO] [01/12/2017 17:33:38.618] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1472725860000,3.1199999999999997), WL(1472725920000,3.1199999999999997), WL(1472725980000,3.1199999999999997), WL(1472726040000,3.1199999999999997), WL(1472726100000,3.1199999999999997), WL(1472726160000,3.1199999999999997), WL(1472726220000,3.1199999999999997), WL(1472726280000,3.1199999999999997), WL(1472726340000,3.1199999999999997), WL(1472726400000,3.1199999999999997)), eGate -> List(WL(1472725860000,2.625), WL(1472725920000,2.625), WL(1472725980000,2.625), WL(1472726040000,2.625), WL(1472726100000,2.625), WL(1472726160000,2.625), WL(1472726220000,2.625), WL(1472726280000,2.625), WL(1472726340000,2.625), WL(1472726400000,2.625)), nonEeaDesk -> List(WL(1472725860000,2.243333333333333), WL(1472725920000,2.243333333333333), WL(1472725980000,2.243333333333333), WL(1472726040000,2.243333333333333), WL(1472726100000,2.243333333333333), WL(1472726160000,2.243333333333333), WL(1472726220000,2.243333333333333), WL(1472726280000,2.243333333333333), WL(1472726340000,2.243333333333333), WL(1472726400000,2.243333333333333))))
[INFO] [01/12/2017 17:33:38.619] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:38.619] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/nonEeaDesk filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:38.619] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:38.619] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/nonEeaDesk
[INFO] [01/12/2017 17:33:38.620] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:38.620] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] A1/nonEeaDesk Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:38.620] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:38.620] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, nonEeaDesk, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
2017-01-12 17:33:38,622 [ForkJoinPool-2-worker-3] INFO  s.FlightCrunchInteractionTests$TestCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
[INFO] [01/12/2017 17:33:38.628] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Received GetLatestCrunch(A1, eeaDesk)
[INFO] [01/12/2017 17:33:38.628] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Sender is Actor[akka://streamCrunchTests/system/testActor-10#1064723175]
[INFO] [01/12/2017 17:33:38.628] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] getting crunch for A1/eeaDesk
[INFO] [01/12/2017 17:33:38.628] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] Performing a crunch
finding handler for UpdateCrunchResult(A1,eGates,CrunchResultWithTimeAndInterval(0,60000,Vector(22),List(23)))
finding handler for UpdateCrunchResult(A1,eGates,CrunchResultWithTimeAndInterval(0,60000,Vector(22),List(23)))
[INFO] [01/12/2017 17:33:38.640] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:38.641] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:38.641] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:38.641] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eeaDesk, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
finding handler for UpdateCrunchResult(A1,eGates,CrunchResultWithTimeAndInterval(0,60000,Vector(22),List(23)))
UpdateCrunchResult eGates. firstTimeMillis: 0
[INFO] [01/12/2017 17:33:38.656] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A2/eeaDesk lookup wl 
[INFO] [01/12/2017 17:33:38.656] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1472725860000,3.1199999999999997), WL(1472725920000,3.1199999999999997), WL(1472725980000,3.1199999999999997), WL(1472726040000,3.1199999999999997), WL(1472726100000,3.1199999999999997), WL(1472726160000,3.1199999999999997), WL(1472726220000,3.1199999999999997), WL(1472726280000,3.1199999999999997), WL(1472726340000,3.1199999999999997), WL(1472726400000,3.1199999999999997)), eGate -> List(WL(1472725860000,2.625), WL(1472725920000,2.625), WL(1472725980000,2.625), WL(1472726040000,2.625), WL(1472726100000,2.625), WL(1472726160000,2.625), WL(1472726220000,2.625), WL(1472726280000,2.625), WL(1472726340000,2.625), WL(1472726400000,2.625)), nonEeaDesk -> List(WL(1472725860000,2.243333333333333), WL(1472725920000,2.243333333333333), WL(1472725980000,2.243333333333333), WL(1472726040000,2.243333333333333), WL(1472726100000,2.243333333333333), WL(1472726160000,2.243333333333333), WL(1472726220000,2.243333333333333), WL(1472726280000,2.243333333333333), WL(1472726340000,2.243333333333333), WL(1472726400000,2.243333333333333))))
[INFO] [01/12/2017 17:33:38.656] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A2/eeaDesk
[INFO] [01/12/2017 17:33:38.656] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set()
2017-01-12 17:33:38,657 [ForkJoinPool-2-worker-3] INFO  s.FlightCrunchInteractionTests$TestCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
[ERROR] [01/12/2017 17:33:38.657] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Failed to crunch A2/eeaDesk
java.util.NoSuchElementException: key not found: eeaDesk
	at scala.collection.MapLike$class.default(MapLike.scala:228)
	at scala.collection.AbstractMap.default(Map.scala:59)
	at scala.collection.MapLike$class.apply(MapLike.scala:141)
	at scala.collection.AbstractMap.apply(Map.scala:59)
	at controllers.CrunchActor$$anonfun$performCrunch$1$$anonfun$5.apply(CrunchActor.scala:172)
	at controllers.CrunchActor$$anonfun$performCrunch$1$$anonfun$5.apply(CrunchActor.scala:169)
	at scala.util.Success.flatMap(Try.scala:231)
	at controllers.CrunchActor$$anonfun$performCrunch$1.apply(CrunchActor.scala:168)
	at controllers.CrunchActor$$anonfun$performCrunch$1.apply(CrunchActor.scala:150)
	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237)
	at scala.util.Try$.apply(Try.scala:192)
	at scala.util.Success.map(Try.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at scala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask.exec(ExecutionContextImpl.scala:121)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.pollAndExecAll(ForkJoinPool.java:1253)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1346)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)

[INFO] [01/12/2017 17:33:38.662] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:38.662] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] A1/eGate Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:38.662] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:38.662] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eGate, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
2017-01-12 17:33:38,675 [ForkJoinPool-2-worker-3] INFO  s.FlightCrunchInteractionTests$TestCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
2017-01-12 17:33:38,676 [ForkJoinPool-2-worker-3] INFO  s.FlightCrunchInteractionTests$TestCrunchActor - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,200,0,,,1,EDI,A1,,BA123,,2016-09-01T10:31,0)))
[INFO] [01/12/2017 17:33:38.658] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A2/eGate lookup wl 
[INFO] [01/12/2017 17:33:38.674] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1472725860000,3.1199999999999997), WL(1472725920000,3.1199999999999997), WL(1472725980000,3.1199999999999997), WL(1472726040000,3.1199999999999997), WL(1472726100000,3.1199999999999997), WL(1472726160000,3.1199999999999997), WL(1472726220000,3.1199999999999997), WL(1472726280000,3.1199999999999997), WL(1472726340000,3.1199999999999997), WL(1472726400000,3.1199999999999997)), eGate -> List(WL(1472725860000,2.625), WL(1472725920000,2.625), WL(1472725980000,2.625), WL(1472726040000,2.625), WL(1472726100000,2.625), WL(1472726160000,2.625), WL(1472726220000,2.625), WL(1472726280000,2.625), WL(1472726340000,2.625), WL(1472726400000,2.625)), nonEeaDesk -> List(WL(1472725860000,2.243333333333333), WL(1472725920000,2.243333333333333), WL(1472725980000,2.243333333333333), WL(1472726040000,2.243333333333333), WL(1472726100000,2.243333333333333), WL(1472726160000,2.243333333333333), WL(1472726220000,2.243333333333333), WL(1472726280000,2.243333333333333), WL(1472726340000,2.243333333333333), WL(1472726400000,2.243333333333333))))
[INFO] [01/12/2017 17:33:38.674] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A2/eGate
[INFO] [01/12/2017 17:33:38.674] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set()
[ERROR] [01/12/2017 17:33:38.674] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Failed to crunch A2/eGate
java.util.NoSuchElementException: key not found: eGate
	at scala.collection.MapLike$class.default(MapLike.scala:228)
	at scala.collection.AbstractMap.default(Map.scala:59)
	at scala.collection.MapLike$class.apply(MapLike.scala:141)
	at scala.collection.AbstractMap.apply(Map.scala:59)
	at controllers.CrunchActor$$anonfun$performCrunch$1$$anonfun$5.apply(CrunchActor.scala:172)
	at controllers.CrunchActor$$anonfun$performCrunch$1$$anonfun$5.apply(CrunchActor.scala:169)
	at scala.util.Success.flatMap(Try.scala:231)
	at controllers.CrunchActor$$anonfun$performCrunch$1.apply(CrunchActor.scala:168)
	at controllers.CrunchActor$$anonfun$performCrunch$1.apply(CrunchActor.scala:150)
	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237)
	at scala.util.Try$.apply(Try.scala:192)
	at scala.util.Success.map(Try.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at scala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask.exec(ExecutionContextImpl.scala:121)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.pollAndExecAll(ForkJoinPool.java:1253)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1346)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)

[INFO] [01/12/2017 17:33:38.676] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A2/nonEeaDesk lookup wl 
raw shifts are 
Shifts are List()
[INFO] [01/12/2017 17:33:38.676] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1472725860000,3.1199999999999997), WL(1472725920000,3.1199999999999997), WL(1472725980000,3.1199999999999997), WL(1472726040000,3.1199999999999997), WL(1472726100000,3.1199999999999997), WL(1472726160000,3.1199999999999997), WL(1472726220000,3.1199999999999997), WL(1472726280000,3.1199999999999997), WL(1472726340000,3.1199999999999997), WL(1472726400000,3.1199999999999997)), eGate -> List(WL(1472725860000,2.625), WL(1472725920000,2.625), WL(1472725980000,2.625), WL(1472726040000,2.625), WL(1472726100000,2.625), WL(1472726160000,2.625), WL(1472726220000,2.625), WL(1472726280000,2.625), WL(1472726340000,2.625), WL(1472726400000,2.625)), nonEeaDesk -> List(WL(1472725860000,2.243333333333333), WL(1472725920000,2.243333333333333), WL(1472725980000,2.243333333333333), WL(1472726040000,2.243333333333333), WL(1472726100000,2.243333333333333), WL(1472726160000,2.243333333333333), WL(1472726220000,2.243333333333333), WL(1472726280000,2.243333333333333), WL(1472726340000,2.243333333333333), WL(1472726400000,2.243333333333333))))
[INFO] [01/12/2017 17:33:38.676] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A2/nonEeaDesk
[INFO] [01/12/2017 17:33:38.676] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set()
[ERROR] [01/12/2017 17:33:38.676] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Failed to crunch A2/nonEeaDesk
java.util.NoSuchElementException: key not found: nonEeaDesk
	at scala.collection.MapLike$class.default(MapLike.scala:228)
	at scala.collection.AbstractMap.default(Map.scala:59)
	at scala.collection.MapLike$class.apply(MapLike.scala:141)
	at scala.collection.AbstractMap.apply(Map.scala:59)
	at controllers.CrunchActor$$anonfun$performCrunch$1$$anonfun$5.apply(CrunchActor.scala:172)
	at controllers.CrunchActor$$anonfun$performCrunch$1$$anonfun$5.apply(CrunchActor.scala:169)
	at scala.util.Success.flatMap(Try.scala:231)
	at controllers.CrunchActor$$anonfun$performCrunch$1.apply(CrunchActor.scala:168)
	at controllers.CrunchActor$$anonfun$performCrunch$1.apply(CrunchActor.scala:150)
	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237)
	at scala.util.Try$.apply(Try.scala:192)
	at scala.util.Success.map(Try.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at scala.concurrent.impl.ExecutionContextImpl$AdaptedForkJoinTask.exec(ExecutionContextImpl.scala:121)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.pollAndExecAll(ForkJoinPool.java:1253)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1346)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)

[INFO] [01/12/2017 17:33:38.734] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk lookup wl 
[INFO] [01/12/2017 17:33:38.734] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] the workloads Map(A1 -> Map(eeaDesk -> List(WL(1472725860000,3.1199999999999997), WL(1472725920000,3.1199999999999997), WL(1472725980000,3.1199999999999997), WL(1472726040000,3.1199999999999997), WL(1472726100000,3.1199999999999997), WL(1472726160000,3.1199999999999997), WL(1472726220000,3.1199999999999997), WL(1472726280000,3.1199999999999997), WL(1472726340000,3.1199999999999997), WL(1472726400000,3.1199999999999997)), eGate -> List(WL(1472725860000,2.625), WL(1472725920000,2.625), WL(1472725980000,2.625), WL(1472726040000,2.625), WL(1472726100000,2.625), WL(1472726160000,2.625), WL(1472726220000,2.625), WL(1472726280000,2.625), WL(1472726340000,2.625), WL(1472726400000,2.625)), nonEeaDesk -> List(WL(1472725860000,2.243333333333333), WL(1472725920000,2.243333333333333), WL(1472725980000,2.243333333333333), WL(1472726040000,2.243333333333333), WL(1472726100000,2.243333333333333), WL(1472726160000,2.243333333333333), WL(1472726220000,2.243333333333333), WL(1472726280000,2.243333333333333), WL(1472726340000,2.243333333333333), WL(1472726400000,2.243333333333333))))
[INFO] [01/12/2017 17:33:38.734] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] lastMidnight: 2016-09-01T00:00:00.000+01:00
[INFO] [01/12/2017 17:33:38.735] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] ^^^A1/eeaDesk filtering minutes to: 1472684400000 to 1472688000000
[INFO] [01/12/2017 17:33:38.735] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] crunchStartTimeMillis: 1472684400000, crunchPeriod: 1
[INFO] [01/12/2017 17:33:38.735] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Will crunch now A1/eeaDesk
[INFO] [01/12/2017 17:33:38.735] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] terminalWorkloads are Set(eeaDesk, eGate, nonEeaDesk)
[INFO] [01/12/2017 17:33:38.736] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] A1/eeaDesk Crunching on List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:38.736] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] !!!@@@terminal workloads: List(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
[INFO] [01/12/2017 17:33:38.736] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Crunch requested for A1, eeaDesk, Workloads: (0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0)...
finding handler for UpdateSimulationResult(A1,eGates,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,eGates,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,eGates,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,eGates,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,eGates,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,eGates,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,eGates,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,eGates,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,eGates,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,eGates,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,EEA,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,EEA,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,EEA,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,EEA,SimulationResult(Vector(DeskRec(100,10)),List(23)))
finding handler for UpdateSimulationResult(A1,EEA,SimulationResult(Vector(DeskRec(100,10)),List(23)))
initialising deskrecschart
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(1),List(10))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1)))))))
queueNosFromSimulationResult userDeskRec Map()
finding handler for UpdateDeskRecsTime(A1,eGates,DeskRecTimeslot(0,5))
will update DeskRecTimeslot(0,5) into List(DeskRecTimeslot(0,6))...
add old: idx: 0, newItem: DeskRecTimeslot(0,5), DeskRecTimeslot(0,6)
before transpose it is List(List(0), List(5), List(0), List(1), List(0), List(10), List(5))
before transpose it is List(1, 1, 1, 1, 1, 1, 1)
2017-01-12 17:33:39,400 [ForkJoinPool-2-worker-7] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
finding handler for UpdateDeskRecsTime(A1,eGates,DeskRecTimeslot(0,5))
2017-01-12 17:33:39,401 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
will update DeskRecTimeslot(0,5) into List(DeskRecTimeslot(0,6))...
add old: idx: 0, newItem: DeskRecTimeslot(0,5), DeskRecTimeslot(0,6)
2017-01-12 17:33:39,420 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
2017-01-12 17:33:39,448 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:39,470 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - about to crunch in R
2017-01-12 17:33:39,470 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - about to crunch in R
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
rollingfairxmax: c(2, 2, 2, 2, 2,... 60 elements total)
2017-01-12 17:33:39,488 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - about to crunch in R
2017-01-12 17:33:39,488 [ForkJoinPool-2-worker-7] INFO  services.TryRenjin$ - about to crunch in R
2017-01-12 17:33:39,555 [ForkJoinPool-2-worker-3] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:39.559] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
[INFO] [01/12/2017 17:33:39.563] [ForkJoinPool-2-worker-3] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/eeaDesk starting at 1472684400000
2017-01-12 17:33:39,589 [ForkJoinPool-2-worker-5] INFO  services.TryRenjin$ - crunched in R
[0m[[0minfo[0m] [0mStreamFlightCrunchTests[0m
[0m[[0minfo[0m] [0m[0m
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(1),List(10))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1)))))), eGate -> Ready((Ready(CrunchResult(Vector(2),List(20))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,2)))))))
queueNosFromSimulationResult userDeskRec Map()
2017-01-12 17:33:39,605 [ForkJoinPool-2-worker-7] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:39.609] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/nonEeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
[INFO] [01/12/2017 17:33:39.609] [ForkJoinPool-2-worker-7] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/nonEeaDesk starting at 1472684400000
[INFO] [01/12/2017 17:33:39.610] [streamCrunchTests-akka.actor.default-dispatcher-3] [akka://streamCrunchTests/user/CrunchActor] crunchActor received CrunchResultWithTimeAndInterval(1472684400000,60000,Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
[INFO] [01/12/2017 17:33:39.611] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eeaDesk Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
[INFO] [01/12/2017 17:33:39.615] [ForkJoinPool-2-worker-5] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/eeaDesk starting at 1472684400000
[INFO] [01/12/2017 17:33:39.615] [streamCrunchTests-akka.actor.default-dispatcher-4] [akka://streamCrunchTests/user/CrunchActor] crunchActor received CrunchResultWithTimeAndInterval(1472684400000,60000,Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
2017-01-12 17:33:39,632 [ForkJoinPool-2-worker-1] INFO  services.TryRenjin$ - crunched in R
[INFO] [01/12/2017 17:33:39.635] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Crunch complete for A1/eGate Success(CrunchResult(Vector(2, 2, 2, 2, 2, 2, 2, 2, 2, 2),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)))
before transpose it is List(List(0), List(5), List(0), List(1), List(0), List(10), List(5))
[0m[[0minfo[0m] [0mStreamed Flight tests[0m
before transpose it is List(1, 1, 1, 1, 1, 1, 1)
[0m[[0minfo[0m] [0m  [32m+[0m can split a stream into two materializers[0m
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(1),List(10))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1)))))), eGate -> Ready((Ready(CrunchResult(Vector(2),List(20))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,2)))))))
queueNosFromSimulationResult userDeskRec Map()
[0m[[0minfo[0m] [0m  [32m+[0m we tell the crunch actor about flights when they change[0m
before transpose it is List(List(0), List(6), List(0), List(2), List(0), List(20), List(10))
before transpose it is List(1, 1, 1, 1, 1, 1, 1)
[0m[[0minfo[0m] [0m  and we have sent it a flight in A1[0m
[0m[[0minfo[0m] [0m    [32m+[0m when we ask for the latest crunch, we get a crunch result for the flight we've sent it[0m
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(1),List(10))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1)))))), nonEeaDesk -> Ready((Ready(CrunchResult(Vector(1),List(10))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1)))))), eGate -> Ready((Ready(CrunchResult(Vector(2),List(20))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,2)))))))
queueNosFromSimulationResult userDeskRec Map()
before transpose it is List(List(0), List(5), List(0), List(1), List(0), List(10), List(5))
before transpose it is List(1, 1, 1, 1, 1, 1, 1)
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mTotal for specification StreamFlightCrunchTests[0m
[0m[[0minfo[0m] [0m[36mFinished in 1 second, 93 ms[0m[0m
[0m[[0minfo[0m] [0m[36m[0m[36m3 examples, 4 expectations, 0 failure, 0 error[0m[0m
[0m[[0minfo[0m] [0m[0m
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(1),List(10))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1)))))), nonEeaDesk -> Ready((Ready(CrunchResult(Vector(1),List(10))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1)))))), eGate -> Ready((Ready(CrunchResult(Vector(2),List(20))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,2)))))))
queueNosFromSimulationResult userDeskRec Map()

cannot create a JUnit XML printer. Please check that specs2-junit.jar is on the classpath

org.specs2.reporter.JUnitXmlPrinter$
java.net.URLClassLoader.findClass(URLClassLoader.java:381)
java.lang.ClassLoader.loadClass(ClassLoader.java:424)
sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
java.lang.ClassLoader.loadClass(ClassLoader.java:357)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
scalaz.Name$$anon$5.value(Name.scala:18)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$ErrorEffectOps.andFinally(ErrorEffect.scala:74)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:77)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:62)
org.specs2.control.eff.Arrs.go$1(Eff.scala:234)
org.specs2.control.eff.Arrs.apply(Eff.scala:244)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
scalaz.$bslash$div.leftMap(Either.scala:98)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:47)
org.specs2.control.eff.Interpret$class.go$1(Interpret.scala:134)
org.specs2.control.eff.Interpret$class.interpretLoop(Interpret.scala:145)
org.specs2.control.eff.Interpret$.interpretLoop(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret(Interpret.scala:57)
org.specs2.control.eff.Interpret$.interpret(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret1(Interpret.scala:64)
org.specs2.control.eff.Interpret$.interpret1(Interpret.scala:153)
org.specs2.control.eff.ErrorEffect$class.runError(ErrorEffect.scala:65)
org.specs2.control.eff.ErrorEffect$.runError(ErrorEffect.scala:120)
org.specs2.control.package$.executeAction(package.scala:56)
org.specs2.runner.SbtRunner$$anonfun$newTask$1$$anon$4.execute(SbtRunner.scala:39)
sbt.ForkMain$Run$2.call(ForkMain.java:296)
sbt.ForkMain$Run$2.call(ForkMain.java:286)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
java.lang.Thread.run(Thread.java:745)
before transpose it is List(List(0), List(6), List(0), List(1), List(0), List(10), List(5))
before transpose it is List(1, 1, 1, 1, 1, 1, 1)
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(1),List(10))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1)))))), nonEeaDesk -> Ready((Ready(CrunchResult(Vector(1),List(10))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1)))))), eGate -> Ready((Ready(CrunchResult(Vector(2),List(20))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,2)))))))
queueNosFromSimulationResult userDeskRec Map()
2017-01-12 17:33:40,008 [pool-1-thread-1] INFO  services.CSVPassengerSplitsProvider - Using CSV Splits
2017-01-12 17:33:40,025 [pool-1-thread-1] INFO  services.CSVPassengerSplitsProvider - Found split for ApiFlight(,,,,,,,,1,0,0,,,2,STN,1,,BA1234,,2017-01-01,0)
2017-01-12 17:33:40,026 [pool-1-thread-1] INFO  services.CSVPassengerSplitsProvider - Using CSV Splits
before transpose it is List(List(0), List(7), List(0), List(2), List(0), List(20), List(10))
2017-01-12 17:33:40,034 [pool-1-thread-1] INFO  services.CSVPassengerSplitsProvider - Failed to find split for ApiFlight(,,,,,,,,1,0,0,,,2,STN,1,,XXXX,,2017-01-01,0) in CSV
2017-01-12 17:33:40,038 [pool-1-thread-1] INFO  services.CSVPassengerSplitsProvider - Using CSV Splits
before transpose it is List(1, 1, 1, 1, 1, 1, 1)
2017-01-12 17:33:40,046 [ForkJoinPool-2-worker-7] INFO  s.PaxSplitsFromCSVTests$$anonfun$2$$anonfun$apply$5$$anon$1 - Got flights by terminal (1,List(ApiFlight(,,,,,,,,1,0,0,,,2,STN,1,,BA1234,,2017-01-12,0)))
2017-01-12 17:33:40,047 [ForkJoinPool-2-worker-7] INFO  services.CSVPassengerSplitsProvider - Found split for ApiFlight(,,,,,,,,1,0,0,,,2,STN,1,,BA1234,,2017-01-12,0)
2017-01-12 17:33:40,049 [ForkJoinPool-2-worker-7] INFO  services.CSVPassengerSplitsProvider - Found split for ApiFlight(,,,,,,,,1,0,0,,,2,STN,1,,BA1234,,2017-01-12,0)
[0m[[0minfo[0m] [0mPaxSplitsFromCSVTests[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mSplit ratios from CSV[0m
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(2, 1),List(10, 20))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1), DeskRecTimeslot(1,2)))))))
queueNosFromSimulationResult userDeskRec Map()
[INFO] [01/12/2017 17:33:40.112] [ForkJoinPool-2-worker-1] [akka://streamCrunchTests/user/CrunchActor] Successful crunch for A1/eGate starting at 1472684400000
[INFO] [01/12/2017 17:33:40.114] [streamCrunchTests-akka.actor.default-dispatcher-2] [akka://streamCrunchTests/user/CrunchActor] crunchActor received CrunchResultWithTimeAndInterval(1472684400000,60000,Vector(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),Vector(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
[0m[[0minfo[0m] [0m-----------Starting Suite spatutorial.client.services.SPACircuitTests-----------[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.DeskRecHandler.UpdateDeskRecInModel		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.DeskRecHandler.AirportCountryHandler.Given no inital state .when we request  airportinfo mappings we see a model change to reflect the pending state and the effect		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.DeskRecHandler.AirportCountryHandler.Given no inital state .when we update a single port code we see the model change 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.DeskRecHandler.AirportCountryHandler.Given no inital state .when we update a set of ports code we see the model change 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.DeskRecHandler.AirportCountryHandler.Given no inital state .when we update a single LHR port code we see the model change 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.DeskRecHandler.AirportCountryHandler.Given no inital state 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.DeskRecHandler.AirportCountryHandler.Given a pending request.when we request a mapping for the existing request we see noChange		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.DeskRecHandler.AirportCountryHandler.Given a pending request		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.DeskRecHandler.AirportCountryHandler		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.DeskRecHandler		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.FlightsHandler.given no flights, when we start, then we request flights from the api		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.FlightsHandler		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Model workloads update		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Update crunch results		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Given a model that already has a crunch result for a queue, when we apply the results for a new queue then we should see both existing queue and new queue		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Given a model that already has a crunch result for 2 queues, when we apply an update for one queue then we should see both existing queue and updated queue in the queueCrunchResults		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Given an empty model when we run a simulation, then the result of the simulation should be in the model		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Given a model with an existing simulation, when we run a simulation, then the new results should be in the model		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Given a model with an existing simulation desk, when we run a simulation on a different desk, then both desks should be in the model		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Given a model with user desk recs, when we update UserDeskRecsTime then we should see updated wait times		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Given a model with desk recs for two queues, when we update one, we should see both queues desk recs		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Map merge		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Map merge 2		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Map merge 3		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Map merge 4		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Map merge 5		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler.Map merge 6		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests.SPACircuitHandler		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m  Given a path to the CSV file[0m
[0m[[0minfo[0m] [0m    [32m+[0m Then I should be able to parse the file[0m
before transpose it is List(List(0), List(5), List(0), List(2), List(0), List(20), List(10))
before transpose it is List(1, 1, 1, 1, 1, 1, 1)

cannot create a JUnit XML printer. Please check that specs2-junit.jar is on the classpath

org.specs2.reporter.JUnitXmlPrinter$
java.net.URLClassLoader.findClass(URLClassLoader.java:381)
java.lang.ClassLoader.loadClass(ClassLoader.java:424)
sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
java.lang.ClassLoader.loadClass(ClassLoader.java:357)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
scalaz.Name$$anon$5.value(Name.scala:18)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$ErrorEffectOps.andFinally(ErrorEffect.scala:74)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:77)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:62)
org.specs2.control.eff.Arrs.go$1(Eff.scala:234)
org.specs2.control.eff.Arrs.apply(Eff.scala:244)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
scalaz.$bslash$div.leftMap(Either.scala:98)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:47)
org.specs2.control.eff.Interpret$class.go$1(Interpret.scala:134)
org.specs2.control.eff.Interpret$class.interpretLoop(Interpret.scala:145)
org.specs2.control.eff.Interpret$.interpretLoop(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret(Interpret.scala:57)
org.specs2.control.eff.Interpret$.interpret(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret1(Interpret.scala:64)
org.specs2.control.eff.Interpret$.interpret1(Interpret.scala:153)
org.specs2.control.eff.ErrorEffect$class.runError(ErrorEffect.scala:65)
org.specs2.control.eff.ErrorEffect$.runError(ErrorEffect.scala:120)
org.specs2.control.package$.executeAction(package.scala:56)
org.specs2.runner.SbtRunner$$anonfun$newTask$1$$anon$4.execute(SbtRunner.scala:39)
sbt.ForkMain$Run$2.call(ForkMain.java:296)
sbt.ForkMain$Run$2.call(ForkMain.java:286)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
java.lang.Thread.run(Thread.java:745)
2017-01-12 17:33:40,338 [ForkJoinPool-2-worker-1] INFO  s.WorkloadsServiceTests$$anonfun$1$$anonfun$apply$1$$anon$1 - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,10,0,,,1,EDI,A1,,BA0001,,2016-01-01T00:00:00,0)))
terminalWorkload: Set((A1,List(200.0)))
2017-01-12 17:33:40,347 [ForkJoinPool-2-worker-1] INFO  s.WorkloadsServiceTests$$anonfun$1$$anonfun$apply$2$$anon$2 - Got flights by terminal (A2,List(ApiFlight(,,,,,,,,1,10,0,,,1,EDI,A2,,BA0002,,2016-01-01T00:00:00,0)))
2017-01-12 17:33:40,348 [ForkJoinPool-2-worker-1] INFO  s.WorkloadsServiceTests$$anonfun$1$$anonfun$apply$2$$anon$2 - Got flights by terminal (A1,List(ApiFlight(,,,,,,,,1,10,0,,,1,EDI,A1,,BA0001,,2016-01-01T00:00:00,0)))

cannot create a JUnit XML printer. Please check that specs2-junit.jar is on the classpath

org.specs2.reporter.JUnitXmlPrinter$
java.net.URLClassLoader.findClass(URLClassLoader.java:381)
java.lang.ClassLoader.loadClass(ClassLoader.java:424)
sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)
java.lang.ClassLoader.loadClass(ClassLoader.java:357)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
org.specs2.reflect.Classes$$anonfun$loadClassEither$1.apply(Classes.scala:103)
scalaz.Name$$anon$5.value(Name.scala:18)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2$$anonfun$onEffect$2.apply(ErrorEffect.scala:90)
scalaz.$bslash$div.fold(Either.scala:58)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:90)
org.specs2.control.eff.ErrorEffect$$anon$2.onEffect(ErrorEffect.scala:86)
org.specs2.control.eff.Eff$EffOps.runM(Eff.scala:133)
org.specs2.control.eff.ErrorEffect$class.andFinally(ErrorEffect.scala:86)
org.specs2.control.eff.ErrorEffect$.andFinally(ErrorEffect.scala:120)
org.specs2.control.eff.ErrorEffect$ErrorEffectOps.andFinally(ErrorEffect.scala:74)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:77)
org.specs2.runner.SbtRunner$$anonfun$specificationRun$1.apply(SbtRunner.scala:62)
org.specs2.control.eff.Arrs.go$1(Eff.scala:234)
org.specs2.control.eff.Arrs.apply(Eff.scala:244)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1$$anonfun$onEffect$1.apply(Interpret.scala:55)
scalaz.$bslash$div.leftMap(Either.scala:98)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:55)
org.specs2.control.eff.Interpret$$anon$1.onEffect(Interpret.scala:47)
org.specs2.control.eff.Interpret$class.go$1(Interpret.scala:134)
org.specs2.control.eff.Interpret$class.interpretLoop(Interpret.scala:145)
org.specs2.control.eff.Interpret$.interpretLoop(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret(Interpret.scala:57)
org.specs2.control.eff.Interpret$.interpret(Interpret.scala:153)
org.specs2.control.eff.Interpret$class.interpret1(Interpret.scala:64)
org.specs2.control.eff.Interpret$.interpret1(Interpret.scala:153)
org.specs2.control.eff.ErrorEffect$class.runError(ErrorEffect.scala:65)
org.specs2.control.eff.ErrorEffect$.runError(ErrorEffect.scala:120)
org.specs2.control.package$.executeAction(package.scala:56)
org.specs2.runner.SbtRunner$$anonfun$newTask$1$$anon$4.execute(SbtRunner.scala:39)
sbt.ForkMain$Run$2.call(ForkMain.java:296)
sbt.ForkMain$Run$2.call(ForkMain.java:286)
java.util.concurrent.FutureTask.run(FutureTask.java:266)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
java.lang.Thread.run(Thread.java:745)
[INFO] [01/12/2017 17:33:40.775] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] New flights List()
[INFO] [01/12/2017 17:33:40.775] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Old      fl MapLike()
[INFO] [01/12/2017 17:33:40.775] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Updating fl List()
[INFO] [01/12/2017 17:33:40.775] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Dropped 0 flights before 2016-01-01T12:00
[INFO] [01/12/2017 17:33:40.901] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] New flights List()
[INFO] [01/12/2017 17:33:40.901] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Old      fl MapLike()
[INFO] [01/12/2017 17:33:40.901] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Updating fl List()
[INFO] [01/12/2017 17:33:40.901] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Dropped 0 flights before 2016-01-01T12:00
[INFO] [01/12/2017 17:33:40.963] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] New flights List()
[INFO] [01/12/2017 17:33:40.963] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Old      fl MapLike()
[INFO] [01/12/2017 17:33:40.963] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Updating fl List()
[INFO] [01/12/2017 17:33:40.963] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Dropped 0 flights before 2016-01-01T12:00
[INFO] [01/12/2017 17:33:41.044] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] New flights List()
[INFO] [01/12/2017 17:33:41.044] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Old      fl MapLike()
[INFO] [01/12/2017 17:33:41.044] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Updating fl List()
[INFO] [01/12/2017 17:33:41.044] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Dropped 0 flights before 2016-01-01T12:00
[INFO] [01/12/2017 17:33:41.152] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] New flights List()
[INFO] [01/12/2017 17:33:41.152] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Old      fl MapLike()
[INFO] [01/12/2017 17:33:41.152] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Updating fl List()
[INFO] [01/12/2017 17:33:41.152] [pool-1-thread-1] [akka.actor.ActorSystemImpl(streamCrunchTests)] Dropped 0 flights before 2016-01-01T12:00
[0m[[0minfo[0m] [0m  Given a pax splits CSV has been loaded[0m
[0m[[0minfo[0m] [0m    [32m+[0m When I query the pax splits for a flight on a date, then I should get the correct split back[0m
[0m[[0minfo[0m] [0m    [32m+[0m When I query the pax splits for a non existent flight, then I should get None[0m
[0m[[0minfo[0m] [0m  Given a FlightPaxSplit[0m
[0m[[0minfo[0m] [0m    [32m+[0m When I ask for the SplitRatios then I should get a list of each split type for a flight[0m
[0m[[0minfo[0m] [0mGiven a Flight Passenger Split[0m
[0m[[0minfo[0m] [0m  [32m+[0m When we ask for workloads by terminal, then we should see the split applied[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mTotal for specification PaxSplitsFromCSVTests[0m
[0m[[0minfo[0m] [0m[36mFinished in 18 ms[0m[0m
[0m[[0minfo[0m] [0m[36m[0m[36m5 examples, 0 failure, 0 error[0m[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mWorkloadsServiceTests[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mWorkloadsCalculator[0m
[0m[[0minfo[0m] [0m  [32m+[0m Given a flight with 10 pax with processing time of 20 seconds, when we ask for the terminal workloads, then we should see 1 minute with 200 workload[0m
[0m[[0minfo[0m] [0m  [32m+[0m Given 2 flights arriving at T1 & T2, when we ask for the terminal workloads, then we should see each terminal's processing times applied [0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mTotal for specification WorkloadsServiceTests[0m
[0m[[0minfo[0m] [0m[36mFinished in 18 ms[0m[0m
[0m[[0minfo[0m] [0m[36m[0m[36m2 examples, 0 failure, 0 error[0m[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mPaxSplitsProviderTests[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mSplits from multiple providers[0m
[0m[[0minfo[0m] [0m  [32m+[0m Given 1 provider with splits for a flight, when we ask for splits then we should see Some()[0m
[0m[[0minfo[0m] [0m  [32m+[0m Given 2 providers, the 1st with splits and 2nd without, when we ask for splits then we should see Some()[0m
[0m[[0minfo[0m] [0m  [32m+[0m Given 2 providers, the 1st without splits and 2nd with, when we ask for splits then we should see Some()[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mTotal for specification PaxSplitsProviderTests[0m
[0m[[0minfo[0m] [0m[36mFinished in 1 ms[0m[0m
[0m[[0minfo[0m] [0m[36m[0m[36m3 examples, 0 failure, 0 error[0m[0m
[0m[[0minfo[0m] [0m[0m
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(2, 1),List(10, 20))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1), DeskRecTimeslot(1,2)))))), eGate -> Ready((Ready(CrunchResult(Vector(23, 3),List(20, 27))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,5), DeskRecTimeslot(1,15)))))), nonEeaDesk -> Ready((Ready(CrunchResult(Vector(15, 21),List(34, 23))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,45), DeskRecTimeslot(1,30)))))))
queueNosFromSimulationResult userDeskRec Map()
[0m[[0minfo[0m] [0m------------------Starting Suite controllers.FlightStateTests------------------[0m
[0m[[0minfo[0m] [0mcontrollers.FlightStateTests.given a flight arriving after the start threshold, when we look at the FlightState, then we should see that flight		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mcontrollers.FlightStateTests.given one flight arriving after the start threshold and one before, when we look at the FlightState, then we should only see the one arriving after		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mcontrollers.FlightStateTests.given one flight scheduled after the threshold but with no estimated time, when we look at the FlightState, then we should see that one flight		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mcontrollers.FlightStateTests.given one there are existing flights before the threshold, when new flights arrive, then the flight state should contain no flights before the threshold		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mcontrollers.FlightStateTests.given one there are existing flights after the threshold, when new flights arrive, then the flight state should contain old flights arriving after the threshold		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mcontrollers.FlightStateTests		[32mSuccess[0m[0m
before transpose it is List(List(0), List(6), List(0), List(2), List(0), List(20), List(10))
[0m[[0minfo[0m] [0m------------------Starting Suite services.ServerShiftDateTests------------------[0m
[0m[[0minfo[0m] [0mservices.ServerShiftDateTests.DateStuff.Day of month starts from 1		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.ServerShiftDateTests.DateStuff.You can add days to an SDate		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.ServerShiftDateTests.DateStuff.SDates can provide a human oriented dmy formatted string		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.ServerShiftDateTests.DateStuff		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.ServerShiftDateTests		[32mSuccess[0m[0m
before transpose it is List(1, 1, 1, 1, 1, 1, 1)
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(2, 1),List(10, 20))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1), DeskRecTimeslot(1,2)))))), eGate -> Ready((Ready(CrunchResult(Vector(23, 3),List(20, 27))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,5), DeskRecTimeslot(1,15)))))), nonEeaDesk -> Ready((Ready(CrunchResult(Vector(15, 21),List(34, 23))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,45), DeskRecTimeslot(1,30)))))))
queueNosFromSimulationResult userDeskRec Map()
[0m[[0minfo[0m] [0m-----------------Starting Suite services.inputfeeds.LHRCsvTests-----------------[0m
[0m[[0minfo[0m] [0mservices.inputfeeds.LHRCsvTests.can load LHR csv		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.inputfeeds.LHRCsvTests.can parse the backwards LHR date format like '05:19 22/10/2016' to a sane joda time		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.inputfeeds.LHRCsvTests.can parse the backwards LHR date format like with a 24hr time '20:19 22/10/2016' to a sane joda time		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.inputfeeds.LHRCsvTests		[32mSuccess[0m[0m
before transpose it is List(List(0), List(8), List(0), List(21), List(0), List(34), List(30))
before transpose it is List(1, 1, 1, 1, 1, 1, 1)
[0m[[0minfo[0m] [0m----------------Starting Suite services.WorkloadCalculatorTests----------------[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType.Examining workloads specifically.Given a single flight with one minute's worth of flow when we apply paxSplits and flow rate, then we should see flow applied to the flight, and splits applied to that flow		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType.Examining workloads specifically.Given a single flight with two minutes of flow and two desks when we apply paxSplits and flow rate, then we should see flow applied to the flight, and splits applied to that flow		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType.Examining workloads specifically.Given 2 flights when we apply paxSplits and flow rate, then we should see flow applied to the flight, and splits applied to that flow		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType.Examining workloads specifically.Given 2 flights where load overlaps when we apply paxSplits and flow rate, then we should see flow applied to the flight, and splits applied to that flow		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType.Examining workloads specifically		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType.Examining Queue Workloads map.Given a single flight with one minute's worth of flow when we apply paxSplits and flow rate, then we should see queues containing flow applied to the flight, and splits applied to that flow		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType.Examining Queue Workloads map.Given a single flight with 2 minute's worth of flow, when we apply paxSplits and flow rate,then we should see queues containing flow applied to the flight, and splits applied to that flow		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType.Examining Queue Workloads map.Given 2 flights each with one minute's worth of flow not overlapping, when we apply paxSplits and flow rate,then we should see queues containing flow applied to the flights, and splits applied to that flow		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType.Examining Queue Workloads map.Given 2 flights each with one minute's worth of overlapping flow, when we apply paxSplits and flow rate,then we should see queues containing flow applied to the flights, and splits applied to that flow		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType.Examining Queue Workloads map		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with simple pax splits all at the same paxType		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with paxSplits of differing paxType to the same queue.Examining workloads specifically.Given a single flight, we see different passenger types aggregated into one workload number		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with paxSplits of differing paxType to the same queue.Examining workloads specifically		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with paxSplits of differing paxType to the same queue.Examining Queue Workloads.Given a single flight, we see different passenger types aggregated into one workload number		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with paxSplits of differing paxType to the same queue.Examining Queue Workloads		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator.with paxSplits of differing paxType to the same queue		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator.queueWorkloadCalculator		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests.WorkloadCalculator		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.WorkloadCalculatorTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m--------------------Starting Suite services.EGateBanksTests--------------------[0m
[0m[[0minfo[0m] [0mservices.EGateBanksTests.Given a rounder to nearest 10, When we pass it [1,5,10.11], Then we should get back [10, 10, 10, 20] 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.EGateBanksTests.Given a crunch result for the eGates Queue, When the recommendation is 1, Then it should be 1		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.EGateBanksTests.Given a crunch result for the eGates Queue, When the recommendation is 6, Then it should be rounded up to 10		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.EGateBanksTests.Given a crunch result for the eGates Queue, When the recommendations are [6, 11, 15, 21], Then it should be rounded up to [10, 15, 15, 25]		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.EGateBanksTests.Given a crunch result for the eGates Queue, When the desk recommendations have been rounded up, Then the wait times should reflect the revised desk recs		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.EGateBanksTests.Given a crunch result for the eGates Queue, When the number of eGates per bank is 10,Then the revised desk recs should be multiples of 10		[32mSuccess[0m[0m
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(2, 1),List(10, 20))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1), DeskRecTimeslot(1,2)))))), eGate -> Ready((Ready(CrunchResult(Vector(23, 3),List(20, 27))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,5), DeskRecTimeslot(1,15)))))), nonEeaDesk -> Ready((Ready(CrunchResult(Vector(15, 21),List(34, 23))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,45), DeskRecTimeslot(1,30)))))))
queueNosFromSimulationResult userDeskRec Map()
before transpose it is List(List(0), List(7), List(0), List(23), List(0), List(27), List(25))
[0m[[0minfo[0m] [0m-----------Starting Suite spatutorial.client.services.ShiftDateTests-----------[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftDateTests.DateStuff.You can add days to an SDate		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftDateTests.DateStuff.SDates can provide a human oriented dmy formatted string		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftDateTests.DateStuff		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftDateTests		[32mSuccess[0m[0m
before transpose it is List(1, 1, 1, 1, 1, 1, 1)
[0m[[0minfo[0m] [0mservices.EGateBanksTests.Given some workload and desks When we run a simulation Then we should see wait times corresponding to those desks		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m-----------Starting Suite spatutorial.client.components.StaffingTests-----------[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.StaffingTests.Staffing		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.StaffingTests		[32mSuccess[0m[0m
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 5, 1, 1, 1, 1, 3),List(1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 5, 1, 1, 1, 1, 4))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1), DeskRecTimeslot(1,2), DeskRecTimeslot(2,1), DeskRecTimeslot(3,2), DeskRecTimeslot(4,8), DeskRecTimeslot(5,2), DeskRecTimeslot(6,1), DeskRecTimeslot(7,2), DeskRecTimeslot(8,1), DeskRecTimeslot(9,11), DeskRecTimeslot(10,1), DeskRecTimeslot(11,2), DeskRecTimeslot(12,1), DeskRecTimeslot(13,2), DeskRecTimeslot(14,1), DeskRecTimeslot(15,5)))))))
queueNosFromSimulationResult userDeskRec Map()
before transpose it is List(List(0, 900000), List(75, 5), List(0, 15), List(7, 3), List(0, 0), List(8, 4), List(15, 9))
before transpose it is List(2, 2, 2, 2, 2, 2, 2)
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 5, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 9, 1, 1, 1, 1, 5, 1, 1, 1, 1, 3),List(1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 5, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 9, 1, 1, 1, 1, 5, 1, 1, 1, 1, 4))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1), DeskRecTimeslot(1,2), DeskRecTimeslot(2,1), DeskRecTimeslot(3,2), DeskRecTimeslot(4,8), DeskRecTimeslot(5,2), DeskRecTimeslot(6,1), DeskRecTimeslot(7,2), DeskRecTimeslot(8,1), DeskRecTimeslot(9,11), DeskRecTimeslot(10,1), DeskRecTimeslot(11,2), DeskRecTimeslot(12,1), DeskRecTimeslot(13,2), DeskRecTimeslot(14,1), DeskRecTimeslot(15,5), DeskRecTimeslot(16,1), DeskRecTimeslot(17,2), DeskRecTimeslot(18,1), DeskRecTimeslot(19,2), DeskRecTimeslot(20,8), DeskRecTimeslot(21,2), DeskRecTimeslot(22,1), DeskRecTimeslot(23,2), DeskRecTimeslot(24,1), DeskRecTimeslot(25,11), DeskRecTimeslot(26,1), DeskRecTimeslot(27,2), DeskRecTimeslot(28,1), DeskRecTimeslot(29,2), DeskRecTimeslot(30,1), DeskRecTimeslot(31,5)))))))
queueNosFromSimulationResult userDeskRec Map()
[0m[[0minfo[0m] [0mservices.EGateBanksTests.Given some workload and egate banks When we run a simulation Then we should see wait times corresponding to those banks of egates		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.EGateBanksTests		[32mSuccess[0m[0m
before transpose it is List(List(0, 900000, 1800000), List(71, 76, 12), List(0, 15, 30), List(7, 9, 3), List(0, 0, 0), List(8, 9, 4), List(15, 14, 9))
[0m[[0minfo[0m] [0m------------------Starting Suite services.CrunchStructureTests------------------[0m
before transpose it is List(3, 3, 3, 3, 3, 3, 3)
[0m[[0minfo[0m] [0mservices.CrunchStructureTests.given workloads by the minute we can get them in t minute chunks and take the sum from each chunk		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.CrunchStructureTests.Given a sequence of workloads we should return the midnight on the day of the earliest workload		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.CrunchStructureTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m--------------Starting Suite services.FlightCrunchInteractionTests--------------[0m
[0m[[0minfo[0m] [0mservices.FlightCrunchInteractionTests.Given a system with flightsactor and crunch actor, flights actor can request crunch actor does a crunch		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.FlightCrunchInteractionTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m----------------------Starting Suite services.CrunchTests----------------------[0m
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 5, 1, 1, 1, 1, 3),List(1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 5, 1, 1, 1, 1, 4))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1), DeskRecTimeslot(1,2), DeskRecTimeslot(2,1), DeskRecTimeslot(3,2), DeskRecTimeslot(4,8), DeskRecTimeslot(5,2), DeskRecTimeslot(6,1), DeskRecTimeslot(7,2), DeskRecTimeslot(8,1), DeskRecTimeslot(9,11), DeskRecTimeslot(10,1), DeskRecTimeslot(11,2), DeskRecTimeslot(12,1), DeskRecTimeslot(13,2), DeskRecTimeslot(14,1), DeskRecTimeslot(15,5)))))), nonEeaDesk -> Ready((Ready(CrunchResult(Vector(1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 5, 1, 1, 1, 1, 4),List(1, 1, 1, 1, 1, 9, 1, 1, 1, 1, 5, 1, 1, 1, 1, 5))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1), DeskRecTimeslot(1,2), DeskRecTimeslot(2,1), DeskRecTimeslot(3,2), DeskRecTimeslot(4,8), DeskRecTimeslot(5,2), DeskRecTimeslot(6,1), DeskRecTimeslot(7,2), DeskRecTimeslot(8,1), DeskRecTimeslot(9,11), DeskRecTimeslot(10,1), DeskRecTimeslot(11,2), DeskRecTimeslot(12,1), DeskRecTimeslot(13,2), DeskRecTimeslot(14,1), DeskRecTimeslot(15,5)))))))
queueNosFromSimulationResult userDeskRec Map()
before transpose it is List(List(0, 900000), List(71, 9), List(0, 15), List(7, 3), List(0, 0), List(8, 4), List(15, 9))
before transpose it is List(2, 2, 2, 2, 2, 2, 2)
queueNosFromSimulationResult queueCrunch Map(eeaDesk -> Ready((Ready(CrunchResult(Vector(1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 5, 1, 1, 1, 1, 3),List(1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 5, 1, 1, 1, 1, 4))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1), DeskRecTimeslot(1,2), DeskRecTimeslot(2,1), DeskRecTimeslot(3,2), DeskRecTimeslot(4,8), DeskRecTimeslot(5,2), DeskRecTimeslot(6,1), DeskRecTimeslot(7,2), DeskRecTimeslot(8,1), DeskRecTimeslot(9,11), DeskRecTimeslot(10,1), DeskRecTimeslot(11,2), DeskRecTimeslot(12,1), DeskRecTimeslot(13,2), DeskRecTimeslot(14,1), DeskRecTimeslot(15,5)))))), nonEeaDesk -> Ready((Ready(CrunchResult(Vector(1, 1, 1, 1, 1, 8, 1, 1, 1, 1, 5, 1, 1, 1, 1, 4),List(1, 1, 1, 1, 1, 9, 1, 1, 1, 1, 5, 1, 1, 1, 1, 5))),Ready(DeskRecTimeSlots(List(DeskRecTimeslot(0,1), DeskRecTimeslot(1,2), DeskRecTimeslot(2,1), DeskRecTimeslot(3,2), DeskRecTimeslot(4,8), DeskRecTimeslot(5,2), DeskRecTimeslot(6,1), DeskRecTimeslot(7,2), DeskRecTimeslot(8,1), DeskRecTimeslot(9,11), DeskRecTimeslot(10,1), DeskRecTimeslot(11,2), DeskRecTimeslot(12,1), DeskRecTimeslot(13,2), DeskRecTimeslot(14,1), DeskRecTimeslot(15,5)))))))
queueNosFromSimulationResult userDeskRec Map()
before transpose it is List(List(0, 900000), List(72, 11), List(0, 15), List(8, 4), List(0, 0), List(9, 5), List(16, 10))
before transpose it is List(2, 2, 2, 2, 2, 2, 2)
[0m[[0minfo[0m] [0m------Starting Suite spatutorial.client.services.TerminalUserDeskRecsTests------[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.TerminalUserDeskRecsTests.Given crunch results and simulation results for one minute in one queue, when we ask for a TerminalUserDeskRecsRow then we should see the data for that minute		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.TerminalUserDeskRecsTests.Given crunch results and simulation results for one minute in 2 queues, when we ask for a TerminalUserDeskRecsRow then we should see the data for that minute from both queues		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.TerminalUserDeskRecsTests.Given crunch results and simulation results for one minute in 3 queues, when we ask for a TerminalUserDeskRecsRow then we should see the data for that minute from all 3 queues		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.TerminalUserDeskRecsTests.Given crunch results and simulation results for 2 minutes in 1 queue, when we ask for a TerminalUserDeskRecsRow then we should see the highest values for those minutes		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.TerminalUserDeskRecsTests.Given crunch results and simulation results for 2 minutes in 3 queues, when we ask for a TerminalUserDeskRecsRow then we should see the highest values from each queue for those minutes		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.TerminalUserDeskRecsTests.Given crunch results and simulation results for 16 minutes in 1 queue, when we ask for TerminalUserDeskRecsRows then we should see the highest values for those minutes		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.TerminalUserDeskRecsTests.Given crunch results and simulation results for 32 minutes in 1 queue, when we ask for TerminalUserDeskRecsRows then we should see the highest values for those minutes		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.TerminalUserDeskRecsTests.Given crunch results and simulation results for 16 minutes in 2 queues, when we ask for TerminalUserDeskRecsRows then we should see the highest values for those minutes in each queue		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.TerminalUserDeskRecsTests		[32mSuccess[0m[0m
2017-01-12 17:33:43,373 [pool-1-thread-1] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
[0m[[0minfo[0m] [0mservices.CrunchTests.canUseCsvForWorkloadInput		[32mSuccess [0m
[0m[[0minfo[0m] [0m[32mFailure(org.renjin.eval.EvalException: length(work) %% target.width == 0 is not TRUE)[0m[0m
[0m[[0minfo[0m] [0mservices.CrunchTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m---------------Starting Suite services.OptimiserExploratoryTests---------------[0m
2017-01-12 17:33:43,621 [pool-1-thread-1] INFO  services.TryRenjin$ - going to run rolling.fair.xmax
[0m[[0minfo[0m] [0mservices.OptimiserExploratoryTests.Given optimsiser settings from PHP, When we pass it workload collected from PHP, Then we should see desk recs matching those from PHP 		[31m[0m
[0m[[0minfo[0m] [0m                                                                                                                                      		[31morg.renjin.eval.EvalException: length(work) %% target.width == 0 is not TRUE[0m[0m
[0m[[0minfo[0m] [0mservices.OptimiserExploratoryTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m-----------------Starting Suite services.AirportToCountryTests-----------------[0m
[0m[[0minfo[0m] [0mservices.AirportToCountryTests.can load csv		[32mSuccess[0m[0m
i'm asserting AirportInfo(Gatwick,London,United Kingdom,LGW)
[0m[[0minfo[0m] [0mservices.AirportToCountryTests.can ask the apiservice for LGW		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mservices.AirportToCountryTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mutest[0m
[0m[[0minfo[0m] [0m-----------------------------------Results-----------------------------------[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mTests: 0[0m
[0m[[0minfo[0m] [0mPassed: 0[0m
[0m[[0minfo[0m] [0mFailed: 0[0m
[0m[[31merror[0m] [0mFailed: Total 73, Failed 1, Errors 0, Passed 72[0m
[0m[[31merror[0m] [0mFailed tests:[0m
[0m[[31merror[0m] [0m	services.OptimiserExploratoryTests[0m
Success(Shift(Alpha 1 ODM,MilliDate(1480573800000),MilliDate(1480605480000),1))
Success(Shift(Alpha 1with ODM,MilliDate(1480573800000),MilliDate(1480605480000),1))
Success(Shift("Alpha + Immigration, Assurance",MilliDate(1480579200000),MilliDate(1480610880000),1))
Success(Shift("Alpha + Immigration, Assurance",MilliDate(1480579200000),MilliDate(1480610880000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1400,MilliDate(1480575600000),MilliDate(1480600800000),1))
Success(Shift(0700-1400,MilliDate(1480575600000),MilliDate(1480600800000),1))
Success(Shift(0700-1600,MilliDate(1480575600000),MilliDate(1480608000000),1))
Success(Shift(0700-1600,MilliDate(1480575600000),MilliDate(1480608000000),1))
Success(Shift(0800-1700,MilliDate(1480579200000),MilliDate(1480611600000),1))
Success(Shift(0800-1700,MilliDate(1480579200000),MilliDate(1480611600000),1))
Success(Shift(Alpha/FGY,MilliDate(1480572000000),MilliDate(1480603680000),1))
Success(Shift(Alpha/Casework,MilliDate(1480575600000),MilliDate(1480602240000),1))
Success(Shift(Alpha (D),MilliDate(1480575600000),MilliDate(1480604040000),1))
Success(Shift(Alpha (DETECTION),MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha (D),MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha/SEA,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha from 0845 with Crime Team/SB,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha - R,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha/OSO/SAT,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha from 0845 with Crime Team/SB,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha (DETECTION),MilliDate(1480575600000),MilliDate(1480611600000),1))
Success(Shift(Training,MilliDate(1480579200000),MilliDate(1480613040000),1))
Success(Shift(Stats,MilliDate(1480582800000),MilliDate(1480609440000),1))
Success(Shift(WI,MilliDate(1480584600000),MilliDate(1480602600000),1))
Success(Shift(09:30-16:54,MilliDate(1480584600000),MilliDate(1480611240000),1))
Success(Shift(1030-1915,MilliDate(1480588200000),MilliDate(1480619700000),1))
Success(Shift(Bravo,MilliDate(1480590000000),MilliDate(1480616640000),1))
Success(Shift(Bravo,MilliDate(1480590000000),MilliDate(1480618440000),1))
Success(Shift(Bravo 1430-1700 CT training,MilliDate(1480590000000),MilliDate(1480621680000),1))
Success(Shift(Bravo - R,MilliDate(1480590000000),MilliDate(1480621680000),1))
Success(Shift(1200-2000,MilliDate(1480593600000),MilliDate(1480622400000),1))
Success(Shift(Charlie - ODM,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA with OTO Joanne Clark,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA/SAT OTO for Alison Burbeary,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie 1430-1700 CT Training (D),MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie - R,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Delta/OSO (D),MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta - R,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/Fgy,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/SEA with OTO M Elmhassani,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/CWK,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/SEA,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(1600-2000,MilliDate(1480608000000),MilliDate(1480622400000),1))
Success(Shift(1600-2000,MilliDate(1480608000000),MilliDate(1480622400000),1))
Success(Shift("Delta 1 Immigration, Assurance",MilliDate(1480610160000),MilliDate(1480641840000),1))
Success(Shift(Echo/SEA OTO for K Hopkins,MilliDate(1480611600000),MilliDate(1480643280000),1))
Success(Shift(Echo,MilliDate(1480611600000),MilliDate(1480643280000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-2200,MilliDate(1480615200000),MilliDate(1480629600000),1))
Success(Shift(Night,MilliDate(1480629600000),MilliDate(1480665600000),1))
Success(Shift(Night - ODM,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Alpha 1 ODM,MilliDate(1480573800000),MilliDate(1480605480000),1))
Success(Shift(Alpha 1with ODM,MilliDate(1480573800000),MilliDate(1480605480000),1))
Success(Shift("Alpha + Immigration, Assurance",MilliDate(1480579200000),MilliDate(1480610880000),1))
Success(Shift("Alpha + Immigration, Assurance",MilliDate(1480579200000),MilliDate(1480610880000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1400,MilliDate(1480575600000),MilliDate(1480600800000),1))
Success(Shift(0700-1400,MilliDate(1480575600000),MilliDate(1480600800000),1))
Success(Shift(0700-1600,MilliDate(1480575600000),MilliDate(1480608000000),1))
Success(Shift(0700-1600,MilliDate(1480575600000),MilliDate(1480608000000),1))
Success(Shift(0800-1700,MilliDate(1480579200000),MilliDate(1480611600000),1))
Success(Shift(0800-1700,MilliDate(1480579200000),MilliDate(1480611600000),1))
Success(Shift(Alpha/FGY,MilliDate(1480572000000),MilliDate(1480603680000),1))
Success(Shift(Alpha/Casework,MilliDate(1480575600000),MilliDate(1480602240000),1))
Success(Shift(Alpha (D),MilliDate(1480575600000),MilliDate(1480604040000),1))
Success(Shift(Alpha (DETECTION),MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha (D),MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha/SEA,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha from 0845 with Crime Team/SB,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha - R,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha/OSO/SAT,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha from 0845 with Crime Team/SB,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha (DETECTION),MilliDate(1480575600000),MilliDate(1480611600000),1))
Success(Shift(Training,MilliDate(1480579200000),MilliDate(1480613040000),1))
Success(Shift(Stats,MilliDate(1480582800000),MilliDate(1480609440000),1))
Success(Shift(WI,MilliDate(1480584600000),MilliDate(1480602600000),1))
Success(Shift(09:30-16:54,MilliDate(1480584600000),MilliDate(1480611240000),1))
Success(Shift(1030-1915,MilliDate(1480588200000),MilliDate(1480619700000),1))
Success(Shift(Bravo,MilliDate(1480590000000),MilliDate(1480616640000),1))
Success(Shift(Bravo,MilliDate(1480590000000),MilliDate(1480618440000),1))
Success(Shift(Bravo 1430-1700 CT training,MilliDate(1480590000000),MilliDate(1480621680000),1))
Success(Shift(Bravo - R,MilliDate(1480590000000),MilliDate(1480621680000),1))
Success(Shift(1200-2000,MilliDate(1480593600000),MilliDate(1480622400000),1))
Success(Shift(Charlie - ODM,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA with OTO Joanne Clark,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA/SAT OTO for Alison Burbeary,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie 1430-1700 CT Training (D),MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie - R,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Delta/OSO (D),MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta - R,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/Fgy,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/SEA with OTO M Elmhassani,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/CWK,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/SEA,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(1600-2000,MilliDate(1480608000000),MilliDate(1480622400000),1))
Success(Shift(1600-2000,MilliDate(1480608000000),MilliDate(1480622400000),1))
Success(Shift("Delta 1 Immigration, Assurance",MilliDate(1480610160000),MilliDate(1480641840000),1))
Success(Shift(Echo/SEA OTO for K Hopkins,MilliDate(1480611600000),MilliDate(1480643280000),1))
Success(Shift(Echo,MilliDate(1480611600000),MilliDate(1480643280000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-2200,MilliDate(1480615200000),MilliDate(1480629600000),1))
Success(Shift(Night,MilliDate(1480629600000),MilliDate(1480665600000),1))
Success(Shift(Night - ODM,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Alpha 1 ODM,MilliDate(1480573800000),MilliDate(1480605480000),1))
Success(Shift(Alpha 1with ODM,MilliDate(1480573800000),MilliDate(1480605480000),1))
Success(Shift("Alpha + Immigration, Assurance",MilliDate(1480579200000),MilliDate(1480610880000),1))
Success(Shift("Alpha + Immigration, Assurance",MilliDate(1480579200000),MilliDate(1480610880000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1400,MilliDate(1480575600000),MilliDate(1480600800000),1))
Success(Shift(0700-1400,MilliDate(1480575600000),MilliDate(1480600800000),1))
Success(Shift(0700-1600,MilliDate(1480575600000),MilliDate(1480608000000),1))
Success(Shift(0700-1600,MilliDate(1480575600000),MilliDate(1480608000000),1))
Success(Shift(0800-1700,MilliDate(1480579200000),MilliDate(1480611600000),1))
Success(Shift(0800-1700,MilliDate(1480579200000),MilliDate(1480611600000),1))
Success(Shift(Alpha/FGY,MilliDate(1480572000000),MilliDate(1480603680000),1))
Success(Shift(Alpha/Casework,MilliDate(1480575600000),MilliDate(1480602240000),1))
Success(Shift(Alpha (D),MilliDate(1480575600000),MilliDate(1480604040000),1))
Success(Shift(Alpha (DETECTION),MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha (D),MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha/SEA,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha from 0845 with Crime Team/SB,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha - R,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha/OSO/SAT,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha from 0845 with Crime Team/SB,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha (DETECTION),MilliDate(1480575600000),MilliDate(1480611600000),1))
Success(Shift(Training,MilliDate(1480579200000),MilliDate(1480613040000),1))
Success(Shift(Stats,MilliDate(1480582800000),MilliDate(1480609440000),1))
Success(Shift(WI,MilliDate(1480584600000),MilliDate(1480602600000),1))
Success(Shift(09:30-16:54,MilliDate(1480584600000),MilliDate(1480611240000),1))
Success(Shift(1030-1915,MilliDate(1480588200000),MilliDate(1480619700000),1))
Success(Shift(Bravo,MilliDate(1480590000000),MilliDate(1480616640000),1))
Success(Shift(Bravo,MilliDate(1480590000000),MilliDate(1480618440000),1))
Success(Shift(Bravo 1430-1700 CT training,MilliDate(1480590000000),MilliDate(1480621680000),1))
Success(Shift(Bravo - R,MilliDate(1480590000000),MilliDate(1480621680000),1))
Success(Shift(1200-2000,MilliDate(1480593600000),MilliDate(1480622400000),1))
Success(Shift(Charlie - ODM,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA with OTO Joanne Clark,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA/SAT OTO for Alison Burbeary,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie 1430-1700 CT Training (D),MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie - R,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Delta/OSO (D),MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta - R,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/Fgy,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/SEA with OTO M Elmhassani,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/CWK,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/SEA,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(1600-2000,MilliDate(1480608000000),MilliDate(1480622400000),1))
Success(Shift(1600-2000,MilliDate(1480608000000),MilliDate(1480622400000),1))
Success(Shift("Delta 1 Immigration, Assurance",MilliDate(1480610160000),MilliDate(1480641840000),1))
Success(Shift(Echo/SEA OTO for K Hopkins,MilliDate(1480611600000),MilliDate(1480643280000),1))
Success(Shift(Echo,MilliDate(1480611600000),MilliDate(1480643280000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-2200,MilliDate(1480615200000),MilliDate(1480629600000),1))
Success(Shift(Night,MilliDate(1480629600000),MilliDate(1480665600000),1))
Success(Shift(Night - ODM,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Alpha 1 ODM,MilliDate(1480573800000),MilliDate(1480605480000),1))
Success(Shift(Alpha 1with ODM,MilliDate(1480573800000),MilliDate(1480605480000),1))
Success(Shift("Alpha + Immigration, Assurance",MilliDate(1480579200000),MilliDate(1480610880000),1))
Success(Shift("Alpha + Immigration, Assurance",MilliDate(1480579200000),MilliDate(1480610880000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1100,MilliDate(1480575600000),MilliDate(1480590000000),1))
Success(Shift(0700-1400,MilliDate(1480575600000),MilliDate(1480600800000),1))
Success(Shift(0700-1400,MilliDate(1480575600000),MilliDate(1480600800000),1))
Success(Shift(0700-1600,MilliDate(1480575600000),MilliDate(1480608000000),1))
Success(Shift(0700-1600,MilliDate(1480575600000),MilliDate(1480608000000),1))
Success(Shift(0800-1700,MilliDate(1480579200000),MilliDate(1480611600000),1))
Success(Shift(0800-1700,MilliDate(1480579200000),MilliDate(1480611600000),1))
Success(Shift(Alpha/FGY,MilliDate(1480572000000),MilliDate(1480603680000),1))
Success(Shift(Alpha/Casework,MilliDate(1480575600000),MilliDate(1480602240000),1))
Success(Shift(Alpha (D),MilliDate(1480575600000),MilliDate(1480604040000),1))
Success(Shift(Alpha (DETECTION),MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha (D),MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha/SEA,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha from 0845 with Crime Team/SB,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha - R,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha/OSO/SAT,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha from 0845 with Crime Team/SB,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha,MilliDate(1480575600000),MilliDate(1480607280000),1))
Success(Shift(Alpha (DETECTION),MilliDate(1480575600000),MilliDate(1480611600000),1))
Success(Shift(Training,MilliDate(1480579200000),MilliDate(1480613040000),1))
Success(Shift(Stats,MilliDate(1480582800000),MilliDate(1480609440000),1))
Success(Shift(WI,MilliDate(1480584600000),MilliDate(1480602600000),1))
Success(Shift(09:30-16:54,MilliDate(1480584600000),MilliDate(1480611240000),1))
Success(Shift(1030-1915,MilliDate(1480588200000),MilliDate(1480619700000),1))
Success(Shift(Bravo,MilliDate(1480590000000),MilliDate(1480616640000),1))
Success(Shift(Bravo,MilliDate(1480590000000),MilliDate(1480618440000),1))
Success(Shift(Bravo 1430-1700 CT training,MilliDate(1480590000000),MilliDate(1480621680000),1))
Success(Shift(Bravo - R,MilliDate(1480590000000),MilliDate(1480621680000),1))
Success(Shift(1200-2000,MilliDate(1480593600000),MilliDate(1480622400000),1))
Success(Shift(Charlie - ODM,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA with OTO Joanne Clark,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA/SAT OTO for Alison Burbeary,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie 1430-1700 CT Training (D),MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie - R,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Charlie/SEA,MilliDate(1480602600000),MilliDate(1480634280000),1))
Success(Shift(Delta/OSO (D),MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta - R,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/Fgy,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/SEA with OTO M Elmhassani,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/CWK,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(Delta/SEA,MilliDate(1480608000000),MilliDate(1480639680000),1))
Success(Shift(1600-2000,MilliDate(1480608000000),MilliDate(1480622400000),1))
Success(Shift(1600-2000,MilliDate(1480608000000),MilliDate(1480622400000),1))
Success(Shift("Delta 1 Immigration, Assurance",MilliDate(1480610160000),MilliDate(1480641840000),1))
Success(Shift(Echo/SEA OTO for K Hopkins,MilliDate(1480611600000),MilliDate(1480643280000),1))
Success(Shift(Echo,MilliDate(1480611600000),MilliDate(1480643280000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-0100,MilliDate(1480615200000),MilliDate(1480640400000),1))
Success(Shift(1800-2200,MilliDate(1480615200000),MilliDate(1480629600000),1))
Success(Shift(Night,MilliDate(1480629600000),MilliDate(1480665600000),1))
Success(Shift(Night - ODM,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
Success(Shift(Night,MilliDate(1480631400000),MilliDate(1480663080000),1))
[0m[[0minfo[0m] [0m---------Starting Suite spatutorial.client.services.ShiftsServiceTests---------[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.some implicits make things nicer whether we're server side or client side 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.round trip the above magic numbers 1481364000000d is 2016/12/10 10:00		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.round trip the above magic numbers 1482148800000L is 2016/12/19 12:00		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given a shift of 10 people, if we ask how many staff are available.at its first bound, then we get 10		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given a shift of 10 people, if we ask how many staff are available.at its upper bound, then we get 10		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given a shift of 10 people, if we ask how many staff are available.can compare dates		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given a shift of 10 people, if we ask how many staff are available		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given two overlapping shifts.on the overlap the staff is the sum of both		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given two overlapping shifts.on the lower bound of the second shift the staff is the sum of both (15)		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given two overlapping shifts.on the upper bound of the second shift the staff the number of the second shift (5)		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given two overlapping shifts.after the upper bound of the second shift the staff is 0		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given two overlapping shifts.before the lower bound of the first shift the staff is 0		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given two overlapping shifts		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Shift parsing .Parse a single shift line		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Shift parsing . Parse a couple of shift lines		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Shift parsing .-ve numbers are fine in movements		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Shift parsing .We can make comments by not using commas		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Shift parsing .empty lines are ignored		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Shift parsing .failure to read a date will return an error for that line		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Shift parsing 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given all the shifts, how fast is it?.Staff movements.Shifts can be represented as staff movements		[32mSuccess [0m
[0m[[0minfo[0m] [0m[32mSuccess(undefined)[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given all the shifts, how fast is it?.Staff movements.Movements from after the asked for date are not included		[32mSuccess [0m
[0m[[0minfo[0m] [0m[32mSuccess(undefined)[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given all the shifts, how fast is it?.Staff movements		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system.Given all the shifts, how fast is it?		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts.As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests.StaffShifts		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m-----------Starting Suite spatutorial.client.services.WorkloadsTests-----------[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.WorkloadsTests.Given workloads, .we need a label per minute, starting at midnight of today		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.WorkloadsTests.Given workloads, .it doesn't matter what terminal we have in workloads we need a label per minute		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.WorkloadsTests.Given workloads, .the labels are in 24H format		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.WorkloadsTests.Given workloads, 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.WorkloadsTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m-----------------------------------Results-----------------------------------[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.WorkloadsTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given workloads, 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        we need a label per minute, starting at midnight of today		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        it doesn't matter what terminal we have in workloads we need a label per minute		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        the labels are in 24H format		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftsServiceTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    StaffShifts		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        As an HO, either in planning or at start of shift, I want to be able tell DRT about staff available by shift for a given periodSo that I can easily get an initial state for the system		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m            some implicits make things nicer whether we're server side or client side 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m            round trip the above magic numbers 1481364000000d is 2016/12/10 10:00		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m            round trip the above magic numbers 1482148800000L is 2016/12/19 12:00		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m            Given a shift of 10 people, if we ask how many staff are available		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                at its first bound, then we get 10		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                at its upper bound, then we get 10		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                can compare dates		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m            Given two overlapping shifts		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                on the overlap the staff is the sum of both		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                on the lower bound of the second shift the staff is the sum of both (15)		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                on the upper bound of the second shift the staff the number of the second shift (5)		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                after the upper bound of the second shift the staff is 0		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                before the lower bound of the first shift the staff is 0		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m            Shift parsing 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                Parse a single shift line		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                 Parse a couple of shift lines		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                -ve numbers are fine in movements		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                We can make comments by not using commas		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                empty lines are ignored		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                failure to read a date will return an error for that line		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m            Given all the shifts, how fast is it?		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                Staff movements		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                    Shifts can be represented as staff movements		[32mSuccess [0m
[0m[[0minfo[0m] [0m                                                                [32mSuccess(undefined)[0m[0m
[0m[[0minfo[0m] [0m                    Movements from after the asked for date are not included		[32mSuccess [0m
[0m[[0minfo[0m] [0m                                                                            [32mSuccess(undefined)[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.TerminalUserDeskRecsTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given crunch results and simulation results for one minute in one queue, when we ask for a TerminalUserDeskRecsRow then we should see the data for that minute		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given crunch results and simulation results for one minute in 2 queues, when we ask for a TerminalUserDeskRecsRow then we should see the data for that minute from both queues		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given crunch results and simulation results for one minute in 3 queues, when we ask for a TerminalUserDeskRecsRow then we should see the data for that minute from all 3 queues		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given crunch results and simulation results for 2 minutes in 1 queue, when we ask for a TerminalUserDeskRecsRow then we should see the highest values for those minutes		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given crunch results and simulation results for 2 minutes in 3 queues, when we ask for a TerminalUserDeskRecsRow then we should see the highest values from each queue for those minutes		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given crunch results and simulation results for 16 minutes in 1 queue, when we ask for TerminalUserDeskRecsRows then we should see the highest values for those minutes		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given crunch results and simulation results for 32 minutes in 1 queue, when we ask for TerminalUserDeskRecsRows then we should see the highest values for those minutes		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given crunch results and simulation results for 16 minutes in 2 queues, when we ask for TerminalUserDeskRecsRows then we should see the highest values for those minutes in each queue		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.StaffingTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Staffing		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.ShiftDateTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    DateStuff		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        You can add days to an SDate		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        SDates can provide a human oriented dmy formatted string		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.SPACircuitTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    DeskRecHandler		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        UpdateDeskRecInModel		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        AirportCountryHandler		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m            Given no inital state 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                when we request  airportinfo mappings we see a model change to reflect the pending state and the effect		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                when we update a single port code we see the model change 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                when we update a set of ports code we see the model change 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                when we update a single LHR port code we see the model change 		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m            Given a pending request		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m                when we request a mapping for the existing request we see noChange		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    FlightsHandler		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        given no flights, when we start, then we request flights from the api		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    SPACircuitHandler		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Model workloads update		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Update crunch results		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given a model that already has a crunch result for a queue, when we apply the results for a new queue then we should see both existing queue and new queue		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given a model that already has a crunch result for 2 queues, when we apply an update for one queue then we should see both existing queue and updated queue in the queueCrunchResults		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given an empty model when we run a simulation, then the result of the simulation should be in the model		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given a model with an existing simulation, when we run a simulation, then the new results should be in the model		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given a model with an existing simulation desk, when we run a simulation on a different desk, then both desks should be in the model		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given a model with user desk recs, when we update UserDeskRecsTime then we should see updated wait times		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given a model with desk recs for two queues, when we update one, we should see both queues desk recs		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Map merge		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Map merge 2		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Map merge 3		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Map merge 4		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Map merge 5		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Map merge 6		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.components.HeatmapDataTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    HeatmapData		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given eeaDesk queue, can get heatmap series from ratio of deskrecs to actual desks, for 1 hour, where rec is 2 and user is 1 then it should be a 2		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given eeaDesk queue get heatmap series from ratio of deskrecs to actual desks, for 1 hour, where rec is 10 and user is 2 then it should be a 5		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given 2 queues nonEeaDesk and eeaDesk queue get heatmap series from ratio of deskrecs to actual desks, for 1 hour, where rec is 10 and user is 2 then it should be a 5		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m        Given 2 queues nonEeaDesk and eeaDesk queue get heatmap series from ratio of deskrecs to actual desks, for 2 hours, where rec is 10 and user is 2 then it should be a 5		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given a map of queuename to pending simulation resultWhen I call waitTimes, Then I should get a Pending back		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    Given a map of queuename to ready simulation resultWhen I call waitTimes, Then I should get a ready back		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0mspatutorial.client.services.StaffQueueAssignmentTests		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m    DeskRecHandler		[32mSuccess[0m[0m
[0m[[0minfo[0m] [0m[0m
[0m[[0minfo[0m] [0mTests: 86[0m
[0m[[0minfo[0m] [0mPassed: 86[0m
[0m[[0minfo[0m] [0mFailed: 0[0m
[0m[[31merror[0m] [0m(server/test:[31mtestOnly[0m) sbt.TestsFailedException: Tests unsuccessful[0m
[0m[[31merror[0m] [0mTotal time: 42 s, completed 12-Jan-2017 17:33:46[0m
